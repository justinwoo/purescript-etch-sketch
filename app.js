(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/jwoo/.npm/lib/node_modules/pulp/node_modules/process/browser.js":[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Alt = function Alt(__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function alt(dict) {
    return dict.alt;
};
var $less$bar$greater = function $less$bar$greater(dictAlt) {
    return alt(dictAlt);
};
module.exports = {
    Alt: Alt,
    "<|>": $less$bar$greater,
    alt: alt,
    altArray: altArray
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Alternative = function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative,
    alternativeArray: alternativeArray
};

},{"Control.Plus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var $less$times = function $less$times(dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function $times$greater(dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function lift5(dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function lift4(dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function lift3(dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function lift2(dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5,
    lift4: lift4,
    lift3: lift3,
    lift2: lift2,
    "*>": $times$greater,
    "<*": $less$times
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function Biapplicative(__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function bipure(dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative,
    bipure: bipure
};

},{"Control.Biapply":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Biapply/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function Biapply(__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function biapply(dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function $less$less$times$greater$greater(dictBiapply) {
    return biapply(dictBiapply);
};
var bilift2 = function bilift2(dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function bilift3(dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(dictBiapply)($less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function $times$greater$greater(dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function $less$less$times(dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply,
    bilift3: bilift3,
    bilift2: bilift2,
    "<<*": $less$less$times,
    "*>>": $times$greater$greater,
    "<<*>>": $less$less$times$greater$greater,
    biapply: biapply,
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifunctor/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Bind/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var $greater$eq$greater = function $greater$eq$greater(dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return Prelude[">>="](dictBind)(f(a))(g);
            };
        };
    };
};
var $eq$less$less = function $eq$less$less(dictBind) {
    return function (f) {
        return function (m) {
            return Prelude[">>="](dictBind)(m)(f);
        };
    };
};
var $less$eq$less = function $less$eq$less(dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return $eq$less$less(dictBind)(f)(g(a));
            };
        };
    };
};
var join = function join(dictBind) {
    return function (m) {
        return Prelude[">>="](dictBind)(m)(Prelude.id(Prelude.categoryFn));
    };
};
var ifM = function ifM(dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return Prelude[">>="](dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    if (!cond$prime) {
                        return f;
                    };
                    throw new Error("Failed pattern match at Control.Bind line 44, column 1 - line 45, column 1: " + [cond$prime.constructor.name]);
                });
            };
        };
    };
};
module.exports = {
    ifM: ifM,
    join: join,
    "<=<": $less$eq$less,
    ">=>": $greater$eq$greater,
    "=<<": $eq$less$less
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function extract(dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};

},{"Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Extend = function Extend(__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function extendFn(dictSemigroup) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function extend(dict) {
    return dict.extend;
};
var $less$less$eq = function $less$less$eq(dictExtend) {
    return extend(dictExtend);
};
var $eq$less$eq = function $eq$less$eq(dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(dictExtend)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function $eq$greater$eq(dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(dictExtend)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function $eq$greater$greater(dictExtend) {
    return function (w) {
        return function (f) {
            return $less$less$eq(dictExtend)(f)(w);
        };
    };
};
var duplicate = function duplicate(dictExtend) {
    return extend(dictExtend)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend,
    duplicate: duplicate,
    "=<=": $eq$less$eq,
    "=>=": $eq$greater$eq,
    "=>>": $eq$greater$greater,
    "<<=": $less$less$eq,
    extend: extend,
    extendFn: extendFn
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Lazy = function Lazy(defer) {
    this.defer = defer;
};
var defer = function defer(dict) {
    return dict.defer;
};
var fix = function fix(dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy,
    fix: fix,
    defer: defer
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f()) {}
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff,
    applyEff: applyEff,
    applicativeEff: applicativeEff,
    bindEff: bindEff,
    monadEff: monadEff,
    foreachE: $foreign.foreachE,
    forE: $foreign.forE,
    whileE: $foreign.whileE,
    untilE: $foreign.untilE,
    runPure: $foreign.runPure
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/foreign.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var pureST = function pureST(st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST,
    runST: $foreign.runST,
    writeSTRef: $foreign.writeSTRef,
    modifySTRef: $foreign.modifySTRef,
    readSTRef: $foreign.readSTRef,
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.ST/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Alternative = require("Control.Alternative");
var Control_Plus = require("Control.Plus");
var MonadPlus = function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function guard(dictMonadPlus) {
    return function (v) {
        if (v) {
            return Prelude["return"](dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]()["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!v) {
            return Control_Plus.empty(dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]()["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadPlus line 35, column 1 - line 36, column 1: " + [v.constructor.name]);
    };
};
module.exports = {
    MonadPlus: MonadPlus,
    guard: guard,
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alternative/index.js","Control.Plus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, []);
var empty = function empty(dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus,
    empty: empty,
    plusArray: plusArray
};

},{"Control.Alt":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Timer/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

module.exports = {};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Event.Types/foreign.js":[function(require,module,exports){
/* global exports, EventTarget */
"use strict";

// module DOM.Event.Types

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Event.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Unsafe_Coerce = require("Unsafe.Coerce");
var EventType = function EventType(x) {
    return x;
};
var unsafeToEvent = Unsafe_Coerce.unsafeCoerce;
var userProximityEventToEvent = unsafeToEvent;
var wheelEventToEvent = unsafeToEvent;
var uiEventToEvent = unsafeToEvent;
var transitionEventToEvent = unsafeToEvent;
var touchEventToEvent = unsafeToEvent;
var timeEventToEvent = unsafeToEvent;
var svgZoomEventToEvent = unsafeToEvent;
var svgEventToEvent = unsafeToEvent;
var storageEventToEvent = unsafeToEvent;
var sensorEventToEvent = unsafeToEvent;
var rtcPeerConnectionIceEventToEvent = unsafeToEvent;
var rtcIdentityEventToEvent = unsafeToEvent;
var rtcIdentityErrorEventToEvent = unsafeToEvent;
var rtcDataChannelEventToEvent = unsafeToEvent;
var relatedEventToEvent = unsafeToEvent;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUserProximityEvent = Data_Foreign.unsafeReadTagged("UserProximityEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTransitionEvent = Data_Foreign.unsafeReadTagged("TransitionEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readTimeEvent = Data_Foreign.unsafeReadTagged("TimeEvent");
var readStorageEvent = Data_Foreign.unsafeReadTagged("StorageEvent");
var readSensorEvent = Data_Foreign.unsafeReadTagged("SensorEvent");
var readSVGZoomEvent = Data_Foreign.unsafeReadTagged("SVGZoomEvent");
var readSVGEvent = Data_Foreign.unsafeReadTagged("SVGEvent");
var readRelatedEvent = Data_Foreign.unsafeReadTagged("RelatedEvent");
var readRTCPeerConnectionIceEvent = Data_Foreign.unsafeReadTagged("RTCPeerConnectionIceEvent");
var readRTCIdentityEvent = Data_Foreign.unsafeReadTagged("RTCIdentityEvent");
var readRTCIdentityErrorEvent = Data_Foreign.unsafeReadTagged("RTCIdentityErrorEvent");
var readRTCDataChannelEvent = Data_Foreign.unsafeReadTagged("RTCDataChannelEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readPointerEvent = Data_Foreign.unsafeReadTagged("PointerEvent");
var readPageTransitionEvent = Data_Foreign.unsafeReadTagged("PageTransitionEvent");
var readOfflineAudioCompletionEvent = Data_Foreign.unsafeReadTagged("OfflineAudioCompletionEvent");
var readMutationEvent = Data_Foreign.unsafeReadTagged("MutationEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
var readMediaStreamEvent = Data_Foreign.unsafeReadTagged("MediaStreamEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readIDBVersionChangeEvent = Data_Foreign.unsafeReadTagged("IDBVersionChangeEvent");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readGamepadEvent = Data_Foreign.unsafeReadTagged("GamepadEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readFetchEvent = Data_Foreign.unsafeReadTagged("FetchEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readEditingBeforeInputEvent = Data_Foreign.unsafeReadTagged("EditingBeforeInputEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var readDeviceProximityEvent = Data_Foreign.unsafeReadTagged("DeviceProximityEvent");
var readDeviceOrientationEvent = Data_Foreign.unsafeReadTagged("DeviceOrientationEvent");
var readDeviceMotionEvent = Data_Foreign.unsafeReadTagged("DeviceMotionEvent");
var readDeviceLightEvent = Data_Foreign.unsafeReadTagged("DeviceLightEvent");
var readDOMTransactionEvent = Data_Foreign.unsafeReadTagged("DOMTransactionEvent");
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var readCSSFontFaceLoadEvent = Data_Foreign.unsafeReadTagged("CSSFontFaceLoadEvent");
var readBlobEvent = Data_Foreign.unsafeReadTagged("BlobEvent");
var readBeforeUnloadEvent = Data_Foreign.unsafeReadTagged("BeforeUnloadEvent");
var readBeforeInputEvent = Data_Foreign.unsafeReadTagged("BeforeInputEvent");
var readAudioProcessingEvent = Data_Foreign.unsafeReadTagged("AudioProcessingEvent");
var readAnimationEvent = Data_Foreign.unsafeReadTagged("AnimationEvent");
var progressEventToEvent = unsafeToEvent;
var popStateEventToEvent = unsafeToEvent;
var pointerEventToEvent = unsafeToEvent;
var pageTransitionEventToEvent = unsafeToEvent;
var offlineAudioCompletionEventToEvent = unsafeToEvent;
var mutationEventToEvent = unsafeToEvent;
var mouseEventToEvent = unsafeToEvent;
var messageEventToEvent = unsafeToEvent;
var mediaStreamEventToEvent = unsafeToEvent;
var keyboardEventToEvent = unsafeToEvent;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUserProximityEvent = new Data_Foreign_Class.IsForeign(readUserProximityEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTransitionEvent = new Data_Foreign_Class.IsForeign(readTransitionEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignTimeEvent = new Data_Foreign_Class.IsForeign(readTimeEvent);
var isForeignStorageEvent = new Data_Foreign_Class.IsForeign(readStorageEvent);
var isForeignSensorEvent = new Data_Foreign_Class.IsForeign(readSensorEvent);
var isForeignSVGZoomEvent = new Data_Foreign_Class.IsForeign(readSVGZoomEvent);
var isForeignSVGEvent = new Data_Foreign_Class.IsForeign(readSVGEvent);
var isForeignRelatedEvent = new Data_Foreign_Class.IsForeign(readRelatedEvent);
var isForeignRTCPeerConnectionIceEvent = new Data_Foreign_Class.IsForeign(readRTCPeerConnectionIceEvent);
var isForeignRTCIdentityEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityEvent);
var isForeignRTCIdentityErrorEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityErrorEvent);
var isForeignRTCDataChannelEvent = new Data_Foreign_Class.IsForeign(readRTCDataChannelEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignPopStateEvent = new Data_Foreign_Class.IsForeign(readPopStateEvent);
var isForeignPointerEvent = new Data_Foreign_Class.IsForeign(readPointerEvent);
var isForeignPageTransitionEvent = new Data_Foreign_Class.IsForeign(readPageTransitionEvent);
var isForeignOfflineAudioCompletionEvent = new Data_Foreign_Class.IsForeign(readOfflineAudioCompletionEvent);
var isForeignMutationEvent = new Data_Foreign_Class.IsForeign(readMutationEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
var isForeignMediaStreamEvent = new Data_Foreign_Class.IsForeign(readMediaStreamEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignIDBVersionChangeEvent = new Data_Foreign_Class.IsForeign(readIDBVersionChangeEvent);
var isForeignHashChangeEvent = new Data_Foreign_Class.IsForeign(readHashChangeEvent);
var isForeignGamepadEvent = new Data_Foreign_Class.IsForeign(readGamepadEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignFetchEvent = new Data_Foreign_Class.IsForeign(readFetchEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignErrorEvent = new Data_Foreign_Class.IsForeign(readErrorEvent);
var isForeignEditingBeforeInputEvent = new Data_Foreign_Class.IsForeign(readEditingBeforeInputEvent);
var isForeignDragEvent = new Data_Foreign_Class.IsForeign(readDragEvent);
var isForeignDeviceProximityEvent = new Data_Foreign_Class.IsForeign(readDeviceProximityEvent);
var isForeignDeviceOrientationEvent = new Data_Foreign_Class.IsForeign(readDeviceOrientationEvent);
var isForeignDeviceMotionEvent = new Data_Foreign_Class.IsForeign(readDeviceMotionEvent);
var isForeignDeviceLightEvent = new Data_Foreign_Class.IsForeign(readDeviceLightEvent);
var isForeignDOMTransactionEvent = new Data_Foreign_Class.IsForeign(readDOMTransactionEvent);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
var isForeignClipboardEvent = new Data_Foreign_Class.IsForeign(readClipboardEvent);
var isForeignCSSFontFaceLoadEvent = new Data_Foreign_Class.IsForeign(readCSSFontFaceLoadEvent);
var isForeignBlobEvent = new Data_Foreign_Class.IsForeign(readBlobEvent);
var isForeignBeforeUnloadEvent = new Data_Foreign_Class.IsForeign(readBeforeUnloadEvent);
var isForeignBeforeInputEvent = new Data_Foreign_Class.IsForeign(readBeforeInputEvent);
var isForeignAudioProcessingEvent = new Data_Foreign_Class.IsForeign(readAudioProcessingEvent);
var isForeignAnimationEvent = new Data_Foreign_Class.IsForeign(readAnimationEvent);
var inputEventToEvent = unsafeToEvent;
var idbVersionChangeEventToEvent = unsafeToEvent;
var hashChangeEventToEvent = unsafeToEvent;
var gamepadEventToEvent = unsafeToEvent;
var focusEventToEvent = unsafeToEvent;
var fetchEventToEvent = unsafeToEvent;
var errorEventToEvent = unsafeToEvent;
var eqEventType = new Prelude.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var ordEventType = new Prelude.Ord(function () {
    return eqEventType;
}, function (v) {
    return function (v1) {
        return Prelude.compare(Prelude.ordString)(v)(v1);
    };
});
var editingBeforeInputEventToEvent = unsafeToEvent;
var dragEventToEvent = unsafeToEvent;
var domTransactionEventToEvent = unsafeToEvent;
var deviceProximityEventToEvent = unsafeToEvent;
var deviceOrientationEventToEvent = unsafeToEvent;
var deviceMotionEventToEvent = unsafeToEvent;
var deviceLightEventToEvent = unsafeToEvent;
var customEventToEvent = unsafeToEvent;
var cssFontFaceLoadEventToEvent = unsafeToEvent;
var compositionEventToEvent = unsafeToEvent;
var closeEventToEvent = unsafeToEvent;
var clipboardEventToEvent = unsafeToEvent;
var blobEventToEvent = unsafeToEvent;
var beforeUnloadEventToEvent = unsafeToEvent;
var beforeInputEventToEvent = unsafeToEvent;
var audioProcessingEventToEvent = unsafeToEvent;
var animationEventToEvent = unsafeToEvent;
module.exports = {
    EventType: EventType,
    readWheelEvent: readWheelEvent,
    wheelEventToEvent: wheelEventToEvent,
    readUserProximityEvent: readUserProximityEvent,
    userProximityEventToEvent: userProximityEventToEvent,
    readUIEvent: readUIEvent,
    uiEventToEvent: uiEventToEvent,
    readTransitionEvent: readTransitionEvent,
    transitionEventToEvent: transitionEventToEvent,
    readTouchEvent: readTouchEvent,
    touchEventToEvent: touchEventToEvent,
    readTimeEvent: readTimeEvent,
    timeEventToEvent: timeEventToEvent,
    readSVGZoomEvent: readSVGZoomEvent,
    svgZoomEventToEvent: svgZoomEventToEvent,
    readSVGEvent: readSVGEvent,
    svgEventToEvent: svgEventToEvent,
    readStorageEvent: readStorageEvent,
    storageEventToEvent: storageEventToEvent,
    readSensorEvent: readSensorEvent,
    sensorEventToEvent: sensorEventToEvent,
    readRTCPeerConnectionIceEvent: readRTCPeerConnectionIceEvent,
    rtcPeerConnectionIceEventToEvent: rtcPeerConnectionIceEventToEvent,
    readRTCIdentityEvent: readRTCIdentityEvent,
    rtcIdentityEventToEvent: rtcIdentityEventToEvent,
    readRTCIdentityErrorEvent: readRTCIdentityErrorEvent,
    rtcIdentityErrorEventToEvent: rtcIdentityErrorEventToEvent,
    readRTCDataChannelEvent: readRTCDataChannelEvent,
    rtcDataChannelEventToEvent: rtcDataChannelEventToEvent,
    readRelatedEvent: readRelatedEvent,
    relatedEventToEvent: relatedEventToEvent,
    readProgressEvent: readProgressEvent,
    progressEventToEvent: progressEventToEvent,
    readPopStateEvent: readPopStateEvent,
    popStateEventToEvent: popStateEventToEvent,
    readPointerEvent: readPointerEvent,
    pointerEventToEvent: pointerEventToEvent,
    readPageTransitionEvent: readPageTransitionEvent,
    pageTransitionEventToEvent: pageTransitionEventToEvent,
    readOfflineAudioCompletionEvent: readOfflineAudioCompletionEvent,
    offlineAudioCompletionEventToEvent: offlineAudioCompletionEventToEvent,
    readMutationEvent: readMutationEvent,
    mutationEventToEvent: mutationEventToEvent,
    readMouseEvent: readMouseEvent,
    mouseEventToEvent: mouseEventToEvent,
    readMessageEvent: readMessageEvent,
    messageEventToEvent: messageEventToEvent,
    readMediaStreamEvent: readMediaStreamEvent,
    mediaStreamEventToEvent: mediaStreamEventToEvent,
    readKeyboardEvent: readKeyboardEvent,
    keyboardEventToEvent: keyboardEventToEvent,
    readInputEvent: readInputEvent,
    inputEventToEvent: inputEventToEvent,
    readIDBVersionChangeEvent: readIDBVersionChangeEvent,
    idbVersionChangeEventToEvent: idbVersionChangeEventToEvent,
    readHashChangeEvent: readHashChangeEvent,
    hashChangeEventToEvent: hashChangeEventToEvent,
    readGamepadEvent: readGamepadEvent,
    gamepadEventToEvent: gamepadEventToEvent,
    readFocusEvent: readFocusEvent,
    focusEventToEvent: focusEventToEvent,
    readFetchEvent: readFetchEvent,
    fetchEventToEvent: fetchEventToEvent,
    readErrorEvent: readErrorEvent,
    errorEventToEvent: errorEventToEvent,
    readEditingBeforeInputEvent: readEditingBeforeInputEvent,
    editingBeforeInputEventToEvent: editingBeforeInputEventToEvent,
    readDragEvent: readDragEvent,
    dragEventToEvent: dragEventToEvent,
    readDOMTransactionEvent: readDOMTransactionEvent,
    domTransactionEventToEvent: domTransactionEventToEvent,
    readDeviceProximityEvent: readDeviceProximityEvent,
    deviceProximityEventToEvent: deviceProximityEventToEvent,
    readDeviceOrientationEvent: readDeviceOrientationEvent,
    deviceOrientationEventToEvent: deviceOrientationEventToEvent,
    readDeviceMotionEvent: readDeviceMotionEvent,
    deviceMotionEventToEvent: deviceMotionEventToEvent,
    readDeviceLightEvent: readDeviceLightEvent,
    deviceLightEventToEvent: deviceLightEventToEvent,
    readCustomEvent: readCustomEvent,
    customEventToEvent: customEventToEvent,
    readCSSFontFaceLoadEvent: readCSSFontFaceLoadEvent,
    cssFontFaceLoadEventToEvent: cssFontFaceLoadEventToEvent,
    readCompositionEvent: readCompositionEvent,
    compositionEventToEvent: compositionEventToEvent,
    readCloseEvent: readCloseEvent,
    closeEventToEvent: closeEventToEvent,
    readClipboardEvent: readClipboardEvent,
    clipboardEventToEvent: clipboardEventToEvent,
    readBlobEvent: readBlobEvent,
    blobEventToEvent: blobEventToEvent,
    readBeforeUnloadEvent: readBeforeUnloadEvent,
    beforeUnloadEventToEvent: beforeUnloadEventToEvent,
    readBeforeInputEvent: readBeforeInputEvent,
    beforeInputEventToEvent: beforeInputEventToEvent,
    readAudioProcessingEvent: readAudioProcessingEvent,
    audioProcessingEventToEvent: audioProcessingEventToEvent,
    readAnimationEvent: readAnimationEvent,
    animationEventToEvent: animationEventToEvent,
    readEventTarget: readEventTarget,
    eqEventType: eqEventType,
    ordEventType: ordEventType,
    isForeignEventTarget: isForeignEventTarget,
    isForeignAnimationEvent: isForeignAnimationEvent,
    isForeignAudioProcessingEvent: isForeignAudioProcessingEvent,
    isForeignBeforeInputEvent: isForeignBeforeInputEvent,
    isForeignBeforeUnloadEvent: isForeignBeforeUnloadEvent,
    isForeignBlobEvent: isForeignBlobEvent,
    isForeignClipboardEvent: isForeignClipboardEvent,
    isForeignCloseEvent: isForeignCloseEvent,
    isForeignCompositionEvent: isForeignCompositionEvent,
    isForeignCSSFontFaceLoadEvent: isForeignCSSFontFaceLoadEvent,
    isForeignCustomEvent: isForeignCustomEvent,
    isForeignDeviceLightEvent: isForeignDeviceLightEvent,
    isForeignDeviceMotionEvent: isForeignDeviceMotionEvent,
    isForeignDeviceOrientationEvent: isForeignDeviceOrientationEvent,
    isForeignDeviceProximityEvent: isForeignDeviceProximityEvent,
    isForeignDOMTransactionEvent: isForeignDOMTransactionEvent,
    isForeignDragEvent: isForeignDragEvent,
    isForeignEditingBeforeInputEvent: isForeignEditingBeforeInputEvent,
    isForeignErrorEvent: isForeignErrorEvent,
    isForeignFetchEvent: isForeignFetchEvent,
    isForeignFocusEvent: isForeignFocusEvent,
    isForeignGamepadEvent: isForeignGamepadEvent,
    isForeignHashChangeEvent: isForeignHashChangeEvent,
    isForeignIDBVersionChangeEvent: isForeignIDBVersionChangeEvent,
    isForeignInputEvent: isForeignInputEvent,
    isForeignKeyboardEvent: isForeignKeyboardEvent,
    isForeignMediaStreamEvent: isForeignMediaStreamEvent,
    isForeignMessageEvent: isForeignMessageEvent,
    isForeignMouseEvent: isForeignMouseEvent,
    isForeignMutationEvent: isForeignMutationEvent,
    isForeignOfflineAudioCompletionEvent: isForeignOfflineAudioCompletionEvent,
    isForeignPageTransitionEvent: isForeignPageTransitionEvent,
    isForeignPointerEvent: isForeignPointerEvent,
    isForeignPopStateEvent: isForeignPopStateEvent,
    isForeignProgressEvent: isForeignProgressEvent,
    isForeignRelatedEvent: isForeignRelatedEvent,
    isForeignRTCDataChannelEvent: isForeignRTCDataChannelEvent,
    isForeignRTCIdentityErrorEvent: isForeignRTCIdentityErrorEvent,
    isForeignRTCIdentityEvent: isForeignRTCIdentityEvent,
    isForeignRTCPeerConnectionIceEvent: isForeignRTCPeerConnectionIceEvent,
    isForeignSensorEvent: isForeignSensorEvent,
    isForeignStorageEvent: isForeignStorageEvent,
    isForeignSVGEvent: isForeignSVGEvent,
    isForeignSVGZoomEvent: isForeignSVGZoomEvent,
    isForeignTimeEvent: isForeignTimeEvent,
    isForeignTouchEvent: isForeignTouchEvent,
    isForeignTransitionEvent: isForeignTransitionEvent,
    isForeignUIEvent: isForeignUIEvent,
    isForeignUserProximityEvent: isForeignUserProximityEvent,
    isForeignWheelEvent: isForeignWheelEvent
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Event.Types/foreign.js","Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Class/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Unsafe.Coerce":"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Types

exports._readHTMLElement = function (failure) {
  return function (success) {
    return function (value) {
      var tag = Object.prototype.toString.call(value);
      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
        return success(value);
      } else {
        return failure(tag);
      }
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var DOM_Event_Types = require("DOM.Event.Types");
var DOM_Node_Types = require("DOM.Node.Types");
var Unsafe_Coerce = require("Unsafe.Coerce");
var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
var readHTMLElement = $foreign._readHTMLElement(function ($0) {
    return Data_Either.Left.create(Data_Foreign.TypeMismatch.create("HTMLElement")($0));
})(Data_Either.Right.create);
var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    readHTMLElement: readHTMLElement,
    htmlElementToEventTarget: htmlElementToEventTarget,
    htmlElementToNode: htmlElementToNode,
    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode,
    htmlElementToParentNode: htmlElementToParentNode,
    htmlElementToElement: htmlElementToElement,
    readHTMLDocument: readHTMLDocument,
    htmlDocumentToEventTarget: htmlDocumentToEventTarget,
    htmlDocumentToNode: htmlDocumentToNode,
    htmlDocumentToParentNode: htmlDocumentToParentNode,
    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode,
    htmlDocumentToDocument: htmlDocumentToDocument,
    windowToEventTarget: windowToEventTarget,
    isForeignHTMLDocument: isForeignHTMLDocument,
    isForeignHTMLElement: isForeignHTMLElement
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/foreign.js","DOM.Event.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Event.Types/index.js","DOM.Node.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.Types/index.js","Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Class/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Unsafe.Coerce":"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Window/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.HTML.Window

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Window/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    location: $foreign.location,
    navigator: $foreign.navigator,
    document: $foreign.document
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Window/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","DOM.HTML.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML/foreign.js":[function(require,module,exports){
/* global exports, window */
"use strict";

// module DOM.HTML

exports.window = function () {
  return window;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_HTML_Types = require("DOM.HTML.Types");
module.exports = {
    window: $foreign.window
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","DOM.HTML.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.ParentNode/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module DOM.Node.ParentNode

var getEffProp = function getEffProp(name) {
  return function (node) {
    return function () {
      return node[name];
    };
  };
};

exports.children = getEffProp("children");

exports.firstElementChild = getEffProp("firstElementChild");

exports.lastElementChild = getEffProp("lastElementChild");

exports.childElementCount = getEffProp("childElementCount");

exports.querySelector = function (selector) {
  return function (node) {
    return function () {
      return node.querySelector(selector);
    };
  };
};

exports.querySelectorAll = function (selector) {
  return function (node) {
    return function () {
      return node.querySelectorAll(selector);
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.ParentNode/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
module.exports = {
    querySelectorAll: $foreign.querySelectorAll,
    querySelector: $foreign.querySelector,
    childElementCount: $foreign.childElementCount,
    lastElementChild: $foreign.lastElementChild,
    firstElementChild: $foreign.firstElementChild,
    children: $foreign.children
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.ParentNode/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","DOM.Node.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.Types/index.js","Data.Nullable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Nullable/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var Unsafe_Coerce = require("Unsafe.Coerce");
var ElementId = function ElementId(x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId,
    documentTypeToNode: documentTypeToNode,
    documentFragmentToNode: documentFragmentToNode,
    documentFragmentToParentNode: documentFragmentToParentNode,
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode,
    processingInstructionToNode: processingInstructionToNode,
    commentToNode: commentToNode,
    textToNode: textToNode,
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode,
    elementToEventTarget: elementToEventTarget,
    elementToNode: elementToNode,
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode,
    elementToParentNode: elementToParentNode,
    documentToEventTarget: documentToEventTarget,
    documentToNode: documentToNode,
    documentToParentNode: documentToParentNode,
    documentToNonElementParentNode: documentToNonElementParentNode
};

},{"DOM.Event.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Event.Types/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Unsafe.Coerce":"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js":[function(require,module,exports){
arguments[4]["/Users/jwoo/Code/purescript-etch-sketch/output/Control.Timer/index.js"][0].apply(exports,arguments)
},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) {
      as[i] = { value: xs[i], index: i };
    }return as;
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function pushSTArray(arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([a]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw,
    freeze: freeze,
    pushSTArray: pushSTArray,
    peekSTArray: peekSTArray,
    toAssocArray: $foreign.toAssocArray,
    spliceSTArray: $foreign.spliceSTArray,
    pushAllSTArray: $foreign.pushAllSTArray,
    pokeSTArray: $foreign.pokeSTArray,
    emptySTArray: $foreign.emptySTArray,
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array.ST/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) {
      r[i] = v;
    }return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function zipWithA(dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (v) {
    return new Data_Tuple.Tuple([], []);
})(function (v) {
    return function (ts) {
        var $36 = unzip(ts);
        return new Data_Tuple.Tuple($colon(v.value0)($36.value0), $colon(v.value1)($36.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x,
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function span(p) {
    var go = function go(__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $42 = uncons(xs);
                if ($42 instanceof Data_Maybe.Just && p($42.value0.head)) {
                    var __tco_acc = $colon($42.value0.head)(acc);
                    acc = __tco_acc;
                    xs = $42.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc),
                    rest: xs
                };
            };
        };
    };
    return go([]);
};
var takeWhile = function takeWhile(p) {
    return function (xs) {
        return span(p)(xs).init;
    };
};
var sortBy = function sortBy(comp) {
    return function (xs) {
        var comp$prime = function comp$prime(x) {
            return function (y) {
                var $46 = comp(x)(y);
                if ($46 instanceof Prelude.GT) {
                    return 1;
                };
                if ($46 instanceof Prelude.EQ) {
                    return 0;
                };
                if ($46 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Array line 409, column 3 - line 414, column 1: " + [$46.constructor.name]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function sort(dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var singleton = function singleton(a) {
    return [a];
};
var replicateM = function replicateM(dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())([]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Data.Array line 136, column 1 - line 137, column 1: " + [n.constructor.name, m.constructor.name]);
        };
    };
};
var $$null = function $$null(xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function nubBy(eq) {
    return function (xs) {
        var $49 = uncons(xs);
        if ($49 instanceof Data_Maybe.Just) {
            return $colon($49.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq($49.value0.head)(y);
            })($49.value0.tail)));
        };
        if ($49 instanceof Data_Maybe.Nothing) {
            return [];
        };
        throw new Error("Failed pattern match: " + [$49.constructor.name]);
    };
};
var nub = function nub(dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var some = function some(dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"](dictAlternative["__superclass_Prelude.Applicative_0"]()["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]()["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function many(dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"](dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())([]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function init(xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 226, column 1 - line 227, column 1: " + [xs.constructor.name]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function last(xs) {
    return $bang$bang(xs)($foreign.length(xs) - 1);
};
var modifyAt = function modifyAt(i) {
    return function (f) {
        return function (xs) {
            var go = function go(x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (v) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function groupBy(op) {
    var go = function go(__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $54 = uncons(xs);
                if ($54 instanceof Data_Maybe.Just) {
                    var sp = span(op($54.value0.head))($54.value0.tail);
                    var __tco_acc = $colon($colon($54.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if ($54 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at Data.Array line 476, column 1 - line 477, column 1: " + [$54.constructor.name]);
            };
        };
    };
    return go([]);
};
var group = function group(dictEq) {
    return function (xs) {
        return groupBy(Prelude.eq(dictEq))(xs);
    };
};
var group$prime = function group$prime(dictOrd) {
    return function ($68) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($68));
    };
};
var foldM = function foldM(dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function insertBy(cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function insert(dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function intersectBy(eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function intersect(dictEq) {
    return intersectBy(Prelude.eq(dictEq));
};
var filterM = function filterM(dictMonad) {
    return function (p) {
        return $foreign["uncons'"](function (v) {
            return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())([]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(p(x))(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(function () {
                            if (v) {
                                return $colon(x)(v1);
                            };
                            if (!v) {
                                return v1;
                            };
                            throw new Error("Failed pattern match: " + [v.constructor.name]);
                        }());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function elemLastIndex(dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function elemIndex(dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function dropWhile(p) {
    return function (xs) {
        return span(p)(xs).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function deleteBy(v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function unionBy(eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function union(dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var $$delete = function $$delete(dictEq) {
    return deleteBy(Prelude.eq(dictEq));
};
var $bslash$bslash = function $bslash$bslash(dictEq) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys2) {
                        return $bslash$bslash(dictEq)($$delete(dictEq)(y)(xs))(ys2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match: " + [xs.constructor.name, ys.constructor.name]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function mapMaybe(f) {
    return concatMap(function ($69) {
        return Data_Maybe.maybe([])(singleton)(f($69));
    });
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function alterAt(i) {
    return function (f) {
        return function (xs) {
            var go = function go(x) {
                var $66 = f(x);
                if ($66 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if ($66 instanceof Data_Maybe.Just) {
                    return updateAt(i)($66.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 349, column 3 - line 358, column 1: " + [$66.constructor.name]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM,
    unzip: unzip,
    zip: zip,
    zipWithA: zipWithA,
    intersectBy: intersectBy,
    intersect: intersect,
    "\\\\": $bslash$bslash,
    deleteBy: deleteBy,
    "delete": $$delete,
    unionBy: unionBy,
    union: union,
    nubBy: nubBy,
    nub: nub,
    groupBy: groupBy,
    "group'": group$prime,
    group: group,
    span: span,
    dropWhile: dropWhile,
    takeWhile: takeWhile,
    take: take,
    sortBy: sortBy,
    sort: sort,
    catMaybes: catMaybes,
    mapMaybe: mapMaybe,
    filterM: filterM,
    concatMap: concatMap,
    alterAt: alterAt,
    modifyAt: modifyAt,
    updateAt: updateAt,
    deleteAt: deleteAt,
    insertAt: insertAt,
    findLastIndex: findLastIndex,
    findIndex: findIndex,
    elemLastIndex: elemLastIndex,
    elemIndex: elemIndex,
    index: index,
    "!!": $bang$bang,
    uncons: uncons,
    init: init,
    tail: tail,
    last: last,
    head: head,
    insertBy: insertBy,
    insert: insert,
    ":": $colon,
    "null": $$null,
    many: many,
    some: some,
    replicateM: replicateM,
    "..": $dot$dot,
    singleton: singleton,
    zipWith: $foreign.zipWith,
    drop: $foreign.drop,
    slice: $foreign.slice,
    filter: $foreign.filter,
    concat: $foreign.concat,
    reverse: $foreign.reverse,
    snoc: $foreign.snoc,
    cons: $foreign.cons,
    length: $foreign.length,
    replicate: $foreign.replicate,
    range: $foreign.range
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/foreign.js","Control.Alt":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js","Control.Alternative":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alternative/index.js","Control.Lazy":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.MonadPlus/index.js","Control.Plus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Data.Tuple":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Tuple/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Bifoldable = function Bifoldable(bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function bifoldr(dict) {
    return dict.bifoldr;
};
var bitraverse_ = function bitraverse_(dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($18) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($18));
                })(function ($19) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(g($19));
                })(Prelude.pure(dictApplicative)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function bifor_(dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function bisequence_(dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function bifoldl(dict) {
    return dict.bifoldl;
};
var bifoldMapDefaultR = function bifoldMapDefaultR(dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldr(dictBifoldable)(function ($20) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f($20));
                    })(function ($21) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(g($21));
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMapDefaultL = function bifoldMapDefaultL(dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldl(dictBifoldable)(function (m) {
                        return function (a) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(f(a));
                        };
                    })(function (m) {
                        return function (b) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(g(b));
                        };
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMap = function bifoldMap(dict) {
    return dict.bifoldMap;
};
var bifoldlDefault = function bifoldlDefault(dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f)($22)));
                    })(function ($23) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(g)($23)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function bifoldrDefault(dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
                        return Data_Monoid_Endo.Endo(f($24));
                    })(function ($25) {
                        return Data_Monoid_Endo.Endo(g($25));
                    })(p))(z);
                };
            };
        };
    };
};
var bifold = function bifold(dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function biany(dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($26) {
                    return Data_Monoid_Disj.runDisj(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($27) {
                        return Data_Monoid_Disj.Disj(p($27));
                    })(function ($28) {
                        return Data_Monoid_Disj.Disj(q($28));
                    })($26));
                };
            };
        };
    };
};
var biall = function biall(dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($29) {
                    return Data_Monoid_Conj.runConj(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($30) {
                        return Data_Monoid_Conj.Conj(p($30));
                    })(function ($31) {
                        return Data_Monoid_Conj.Conj(q($31));
                    })($29));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable,
    biall: biall,
    biany: biany,
    bisequence_: bisequence_,
    bifor_: bifor_,
    bitraverse_: bitraverse_,
    bifold: bifold,
    bifoldMapDefaultL: bifoldMapDefaultL,
    bifoldMapDefaultR: bifoldMapDefaultR,
    bifoldlDefault: bifoldlDefault,
    bifoldrDefault: bifoldrDefault,
    bifoldMap: bifoldMap,
    bifoldl: bifoldl,
    bifoldr: bifoldr
};

},{"Control.Apply":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Apply/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Monoid.Conj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Endo/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Bifunctor = function Bifunctor(bimap) {
    this.bimap = bimap;
};
var bimap = function bimap(dict) {
    return dict.bimap;
};
var lmap = function lmap(dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function rmap(dictBifunctor) {
    return bimap(dictBifunctor)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor,
    rmap: rmap,
    lmap: lmap,
    bimap: bimap
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function Bitraversable(__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function bitraverse(dict) {
    return dict.bitraverse;
};
var bisequenceDefault = function bisequenceDefault(dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return bitraverse(dictBitraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn))(t);
        };
    };
};
var bisequence = function bisequence(dict) {
    return dict.bisequence;
};
var bitraverseDefault = function bitraverseDefault(dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function bifor(dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable,
    bifor: bifor,
    bisequenceDefault: bisequenceDefault,
    bitraverseDefault: bitraverseDefault,
    bisequence: bisequence,
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifunctor/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Char/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Char/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    toUpper: $foreign.toUpper,
    toLower: $foreign.toLower,
    toCharCode: $foreign.toCharCode,
    fromCharCode: $foreign.fromCharCode,
    toString: $foreign.toString
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Char/foreign.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Left = function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
}();
var Right = function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
}();
var showEither = function showEither(dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            if (v instanceof Left) {
                return "Left (" + (Prelude.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "Right (" + (Prelude.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 174, column 1 - line 181, column 1: " + [v.constructor.name]);
        });
    };
};
var functorEither = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [f.constructor.name, v.constructor.name]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [v.constructor.name]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Prelude.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [v.constructor.name, v1.constructor.name]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function eqEither(dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude["=="](dictEq)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude["=="](dictEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function ordEither(dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqEither(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude.compare(dictOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude.compare(dictOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Left) {
                    return Prelude.LT.value;
                };
                if (v1 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at Data.Either line 191, column 1 - line 197, column 1: " + [v.constructor.name, v1.constructor.name]);
            };
        });
    };
};
var either = function either(v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function boundedEither(dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Left(Prelude.bottom(dictBounded)), new Right(Prelude.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 56, column 1 - line 92, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [v.constructor.name]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"](functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function semigroupEither(dictSemigroup) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function semiringEither(dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Right(Prelude.one(dictSemiring)), new Right(Prelude.zero(dictSemiring)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left,
    Right: Right,
    isRight: isRight,
    isLeft: isLeft,
    either: either,
    functorEither: functorEither,
    bifunctorEither: bifunctorEither,
    applyEither: applyEither,
    applicativeEither: applicativeEither,
    altEither: altEither,
    bindEither: bindEither,
    monadEither: monadEither,
    extendEither: extendEither,
    showEither: showEither,
    eqEither: eqEither,
    ordEither: ordEither,
    boundedEither: boundedEither,
    foldableEither: foldableEither,
    bifoldableEither: bifoldableEither,
    traversableEither: traversableEither,
    bitraversableEither: bitraversableEither,
    semiringEither: semiringEither,
    semigroupEither: semigroupEither
};

},{"Control.Alt":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Bifoldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function foldr(dict) {
    return dict.foldr;
};
var traverse_ = function traverse_(dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($161) {
                return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($161));
            })(Prelude.pure(dictApplicative)(Prelude.unit));
        };
    };
};
var for_ = function for_(dictApplicative) {
    return function (dictFoldable) {
        return Prelude.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function sequence_(dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function foldl(dict) {
    return dict.foldl;
};
var intercalate = function intercalate(dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function go(v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false,
                                acc: x
                            };
                        };
                        return {
                            init: false,
                            acc: Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(v.acc)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return foldl(dictFoldable)(go)({
                    init: true,
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs).acc;
            };
        };
    };
};
var maximumBy = function maximumBy(dictFoldable) {
    return function (cmp) {
        var max$prime = function max$prime(v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just(function () {
                        var $87 = cmp(v.value0)(v1);
                        if ($87 instanceof Prelude.GT) {
                            return v.value0;
                        };
                        return v1;
                    }());
                };
                throw new Error("Failed pattern match at Data.Foldable line 246, column 3 - line 247, column 3: " + [v.constructor.name, v1.constructor.name]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function maximum(dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var mconcat = function mconcat(dictFoldable) {
    return function (dictMonoid) {
        return foldl(dictFoldable)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(dictMonoid));
    };
};
var minimumBy = function minimumBy(dictFoldable) {
    return function (cmp) {
        var min$prime = function min$prime(v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just(function () {
                        var $91 = cmp(v.value0)(v1);
                        if ($91 instanceof Prelude.LT) {
                            return v.value0;
                        };
                        return v1;
                    }());
                };
                throw new Error("Failed pattern match at Data.Foldable line 261, column 3 - line 262, column 3: " + [v.constructor.name, v1.constructor.name]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function minimum(dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var product = function product(dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["*"](dictSemiring))(Prelude.one(dictSemiring));
    };
};
var sum = function sum(dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["+"](dictSemiring))(Prelude.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [f.constructor.name, v.constructor.name]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldr(dictFoldable)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldl(dictFoldable)(function (acc) {
                    return function (x) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldMap = function foldMap(dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function foldlDefault(dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($162) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(c)($162)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function foldrDefault(dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($163) {
                    return Data_Monoid_Endo.Endo(c($163));
                })(xs))(u);
            };
        };
    };
};
var fold = function fold(dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function find(dictFoldable) {
    return function (p) {
        return foldl(dictFoldable)(function (r) {
            return function (x) {
                var $160 = p(x);
                if ($160) {
                    return new Data_Maybe.Just(x);
                };
                if (!$160) {
                    return r;
                };
                throw new Error("Failed pattern match at Data.Foldable line 233, column 1 - line 234, column 1: " + [$160.constructor.name]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function any(dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($164) {
                return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                    return Data_Monoid_Disj.Disj(p($165));
                })($164));
            };
        };
    };
};
var elem = function elem(dictFoldable) {
    return function (dictEq) {
        return function ($166) {
            return any(dictFoldable)(Prelude.booleanAlgebraBoolean)(Prelude["=="](dictEq)($166));
        };
    };
};
var notElem = function notElem(dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($167) {
                return !elem(dictFoldable)(dictEq)(x)($167);
            };
        };
    };
};
var or = function or(dictFoldable) {
    return function (dictBooleanAlgebra) {
        return any(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function all(dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($168) {
                return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($169) {
                    return Data_Monoid_Conj.Conj(p($169));
                })($168));
            };
        };
    };
};
var and = function and(dictFoldable) {
    return function (dictBooleanAlgebra) {
        return all(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable,
    minimumBy: minimumBy,
    minimum: minimum,
    maximumBy: maximumBy,
    maximum: maximum,
    find: find,
    notElem: notElem,
    elem: elem,
    product: product,
    sum: sum,
    all: all,
    any: any,
    or: or,
    and: and,
    intercalate: intercalate,
    mconcat: mconcat,
    sequence_: sequence_,
    for_: for_,
    traverse_: traverse_,
    fold: fold,
    foldMapDefaultR: foldMapDefaultR,
    foldMapDefaultL: foldMapDefaultL,
    foldlDefault: foldlDefault,
    foldrDefault: foldrDefault,
    foldMap: foldMap,
    foldl: foldl,
    foldr: foldr,
    foldableArray: foldableArray,
    foldableMaybe: foldableMaybe,
    foldableFirst: foldableFirst,
    foldableLast: foldableLast,
    foldableAdditive: foldableAdditive,
    foldableDual: foldableDual,
    foldableDisj: foldableDisj,
    foldableConj: foldableConj,
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/foreign.js","Control.Apply":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Apply/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Last/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Monoid.Additive":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Endo/index.js","Data.Monoid.Multiplicative":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Foreign_Null = require("Data.Foreign.Null");
var Data_Foreign_NullOrUndefined = require("Data.Foreign.NullOrUndefined");
var Data_Foreign_Undefined = require("Data.Foreign.Undefined");
var Data_Int = require("Data.Int");
var Data_Traversable = require("Data.Traversable");
var IsForeign = function IsForeign(read) {
    this.read = read;
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var read = function read(dict) {
    return dict.read;
};
var readJSON = function readJSON(dictIsForeign) {
    return function (json) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(dictIsForeign));
    };
};
var readWith = function readWith(dictIsForeign) {
    return function (f) {
        return function (value) {
            return Data_Either.either(function ($8) {
                return Data_Either.Left.create(f($8));
            })(Data_Either.Right.create)(read(dictIsForeign)(value));
        };
    };
};
var readProp = function readProp(dictIsForeign) {
    return function (dictIndex) {
        return function (prop) {
            return function (value) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Foreign_Index.errorAt(dictIndex)(prop)));
            };
        };
    };
};
var undefinedIsForeign = function undefinedIsForeign(dictIsForeign) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(dictIsForeign)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var nullOrUndefinedIsForeign = function nullOrUndefinedIsForeign(dictIsForeign) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
};
var nullIsForeign = function nullIsForeign(dictIsForeign) {
    return new IsForeign(Data_Foreign_Null.readNull(read(dictIsForeign)));
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var foreignIsForeign = new IsForeign(function (f) {
    return Prelude["return"](Data_Either.applicativeEither)(f);
});
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var arrayIsForeign = function arrayIsForeign(dictIsForeign) {
    return new IsForeign(function (value) {
        var readElement = function readElement(i) {
            return function (value1) {
                return readWith(dictIsForeign)(Data_Foreign.ErrorAtIndex.create(i))(value1);
            };
        };
        var readElements = function readElements(arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
    });
};
module.exports = {
    IsForeign: IsForeign,
    readProp: readProp,
    readWith: readWith,
    readJSON: readJSON,
    read: read,
    foreignIsForeign: foreignIsForeign,
    stringIsForeign: stringIsForeign,
    charIsForeign: charIsForeign,
    booleanIsForeign: booleanIsForeign,
    numberIsForeign: numberIsForeign,
    intIsForeign: intIsForeign,
    arrayIsForeign: arrayIsForeign,
    nullIsForeign: nullIsForeign,
    undefinedIsForeign: undefinedIsForeign,
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
};

},{"Data.Array":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/index.js","Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Foreign.Index":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Index/index.js","Data.Foreign.Null":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Null/index.js","Data.Foreign.NullOrUndefined":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.NullOrUndefined/index.js","Data.Foreign.Undefined":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Undefined/index.js","Data.Int":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Index/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign.Index

// jshint maxparams: 4

exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Index/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Index = function Index(errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function unsafeReadProp(k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function ix(dict) {
    return dict.ix;
};
var $bang = function $bang(dictIndex) {
    return ix(dictIndex);
};
var index = unsafeReadProp;
var hasPropertyImpl = function hasPropertyImpl(v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function hasProperty(dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
var hasOwnProperty = function hasOwnProperty(dict) {
    return dict.hasOwnProperty;
};
var errorAt = function errorAt(dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index,
    errorAt: errorAt,
    hasOwnProperty: hasOwnProperty,
    hasProperty: hasProperty,
    "!": $bang,
    ix: ix,
    index: index,
    prop: prop,
    indexString: indexString,
    indexInt: indexInt
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Index/foreign.js","Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Function":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/index.js","Data.Int":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Null/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Null = function Null(x) {
    return x;
};
var runNull = function runNull(v) {
    return v;
};
var readNull = function readNull(v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return Null(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Null: Null,
    readNull: readNull,
    runNull: runNull
};

},{"Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.NullOrUndefined/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var NullOrUndefined = function NullOrUndefined(x) {
    return x;
};
var runNullOrUndefined = function runNullOrUndefined(v) {
    return v;
};
var readNullOrUndefined = function readNullOrUndefined(v) {
    return function (value) {
        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return NullOrUndefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined,
    readNullOrUndefined: readNullOrUndefined,
    runNullOrUndefined: runNullOrUndefined
};

},{"Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign.Undefined/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Undefined = function Undefined(x) {
    return x;
};
var runUndefined = function runUndefined(v) {
    return v;
};
var readUndefined = function readUndefined(v) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return Undefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Undefined: Undefined,
    readUndefined: readUndefined,
    runUndefined: runUndefined
};

},{"Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign

// jshint maxparams: 3

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};

// jshint maxparams: 1
exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value === "undefined" ? "undefined" : _typeof(value);
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Data_String = require("Data.String");
var TypeMismatch = function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
}();
var ErrorAtIndex = function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
}();
var ErrorAtProperty = function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
}();
var JSONError = function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
}();
var unsafeReadTagged = function unsafeReadTagged(tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
    };
};
var showForeignError = new Prelude.Show(function (v) {
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Prelude.show(Prelude.showInt)(v.value0) + (": " + Prelude.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Prelude.show(Prelude.showString)(v.value0) + (": " + Prelude.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    throw new Error("Failed pattern match: " + [v.constructor.name]);
});
var readString = unsafeReadTagged("String");
var readNumber = unsafeReadTagged("Number");
var readInt = function readInt(value) {
    var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
    var fromNumber = function fromNumber($30) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($30));
    };
    return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
};
var readChar = function readChar(value) {
    var error = Data_Either.Left.create(new TypeMismatch("Char", $foreign.tagOf(value)));
    var fromString = function fromString($31) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_String.toChar($31));
    };
    return Data_Either.either(Prelude["const"](error))(fromString)(readString(value));
};
var readBoolean = unsafeReadTagged("Boolean");
var readArray = function readArray(value) {
    if ($foreign.isArray(value)) {
        return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
    };
    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
};
var parseJSON = function parseJSON(json) {
    return $foreign.parseJSONImpl(function ($32) {
        return Data_Either.Left.create(JSONError.create($32));
    }, Data_Either.Right.create, json);
};
var eqForeignError = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof TypeMismatch && v1 instanceof TypeMismatch) {
            return v.value0 === v1.value0 && v.value1 === v1.value1;
        };
        if (v instanceof ErrorAtIndex && v1 instanceof ErrorAtIndex) {
            return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
        };
        if (v instanceof ErrorAtProperty && v1 instanceof ErrorAtProperty) {
            return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
        };
        if (v instanceof JSONError && v1 instanceof JSONError) {
            return v.value0 === v1.value0;
        };
        return false;
    };
});
module.exports = {
    TypeMismatch: TypeMismatch,
    ErrorAtIndex: ErrorAtIndex,
    ErrorAtProperty: ErrorAtProperty,
    JSONError: JSONError,
    readArray: readArray,
    readInt: readInt,
    readNumber: readNumber,
    readBoolean: readBoolean,
    readChar: readChar,
    readString: readString,
    unsafeReadTagged: unsafeReadTagged,
    parseJSON: parseJSON,
    showForeignError: showForeignError,
    eqForeignError: eqForeignError,
    isArray: $foreign.isArray,
    isUndefined: $foreign.isUndefined,
    isNull: $foreign.isNull,
    tagOf: $foreign.tagOf,
    typeOf: $foreign.typeOf,
    unsafeFromForeign: $foreign.unsafeFromForeign,
    toForeign: $foreign.toForeign
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foreign/foreign.js","Data.Either":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Either/index.js","Data.Function":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/index.js","Data.Int":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.String":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var on = function on(f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on,
    runFn10: $foreign.runFn10,
    runFn9: $foreign.runFn9,
    runFn8: $foreign.runFn8,
    runFn7: $foreign.runFn7,
    runFn6: $foreign.runFn6,
    runFn5: $foreign.runFn5,
    runFn4: $foreign.runFn4,
    runFn3: $foreign.runFn3,
    runFn2: $foreign.runFn2,
    runFn1: $foreign.runFn1,
    runFn0: $foreign.runFn0,
    mkFn10: $foreign.mkFn10,
    mkFn9: $foreign.mkFn9,
    mkFn8: $foreign.mkFn8,
    mkFn7: $foreign.mkFn7,
    mkFn6: $foreign.mkFn6,
    mkFn5: $foreign.mkFn5,
    mkFn4: $foreign.mkFn4,
    mkFn3: $foreign.mkFn3,
    mkFn2: $foreign.mkFn2,
    mkFn1: $foreign.mkFn1,
    mkFn0: $foreign.mkFn0
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/foreign.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Invariant = function Invariant(imap) {
    this.imap = imap;
};
var imapF = function imapF(dictFunctor) {
    return function ($1) {
        return Prelude["const"](Prelude.map(dictFunctor)($1));
    };
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function imap(dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant,
    imapF: imapF,
    imap: imap,
    invariantFn: invariantFn,
    invariantArray: invariantArray
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int.Bits/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int.Bits/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot,
    ".|.": $dot$bar$dot,
    ".&.": $dot$amp$dot,
    complement: $foreign.complement,
    zshr: $foreign.zshr,
    shr: $foreign.shr,
    shl: $foreign.shl
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int.Bits/foreign.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $$Math = require("Math");
var odd = function odd(x) {
    return (x & 1) !== 0;
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function unsafeClamp(x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 48, column 1 - line 49, column 1: " + [x.constructor.name]);
};
var round = function round($1) {
    return unsafeClamp($$Math.round($1));
};
var floor = function floor($2) {
    return unsafeClamp($$Math.floor($2));
};
var even = function even(x) {
    return (x & 1) === 0;
};
var ceil = function ceil($3) {
    return unsafeClamp($$Math.ceil($3));
};
module.exports = {
    odd: odd,
    even: even,
    fromString: fromString,
    round: round,
    floor: floor,
    ceil: ceil,
    fromNumber: fromNumber,
    toNumber: $foreign.toNumber
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int/foreign.js","Data.Int.Bits":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Int.Bits/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/index.js","Math":"/Users/jwoo/Code/purescript-etch-sketch/output/Math/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.List/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Nil = function () {
    function Nil() {};
    Nil.value = new Nil();
    return Nil;
}();
var Cons = function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
}();
var $colon = Cons.create;
var updateAt = function updateAt(v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(v1, v2.value1));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(updateAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var uncons = function uncons(v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just({
            head: v.value0,
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 270, column 1 - line 271, column 1: " + [v.constructor.name]);
};
var toUnfoldable = function toUnfoldable(dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function tail(v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 251, column 1 - line 252, column 1: " + [v.constructor.name]);
};
var span = function span(v) {
    return function (v1) {
        if (v1 instanceof Cons && v(v1.value0)) {
            var $132 = span(v)(v1.value1);
            return {
                init: new Cons(v1.value0, $132.init),
                rest: $132.rest
            };
        };
        return {
            init: Nil.value,
            rest: v1
        };
    };
};
var singleton = function singleton(a) {
    return new Cons(a, Nil.value);
};
var sortBy = function sortBy(cmp) {
    var merge = function merge(v) {
        return function (v1) {
            if (v instanceof Cons && v1 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v1.value0))(Prelude.GT.value)) {
                    return new Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Nil) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 444, column 1 - line 445, column 1: " + [v.constructor.name, v1.constructor.name]);
        };
    };
    var mergePairs = function mergePairs(v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function mergeAll(__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && v.value1 instanceof Nil) {
                return v.value0;
            };
            var __tco_v = mergePairs(v);
            v = __tco_v;
            continue tco;
        };
    };
    var sequences = function sequences(v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v.value1.value0))(Prelude.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(v.value1.value0)(Cons.create(v.value0))(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function descending(__copy_a) {
        return function (__copy_as) {
            return function (__copy_v) {
                var a = __copy_a;
                var as = __copy_as;
                var v = __copy_v;
                tco: while (true) {
                    if (v instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                        var __tco_a = v.value0;
                        var __tco_as = new Cons(a, as);
                        var __tco_v = v.value1;
                        a = __tco_a;
                        as = __tco_as;
                        v = __tco_v;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(v));
                };
            };
        };
    };
    var ascending = function ascending(a) {
        return function (as) {
            return function (v) {
                if (v instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                    return ascending(v.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(v.value1);
                };
                return new Cons(as(singleton(a)), sequences(v));
            };
        };
    };
    return function ($363) {
        return mergeAll(sequences($363));
    };
};
var sort = function sort(dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var showList = function showList(dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        if (v instanceof Cons) {
            return "Cons (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(showList(dictShow))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name]);
    });
};
var semigroupList = new Prelude.Semigroup(function (v) {
    return function (ys) {
        if (v instanceof Nil) {
            return ys;
        };
        if (v instanceof Cons) {
            return new Cons(v.value0, Prelude["<>"](semigroupList)(v.value1)(ys));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, ys.constructor.name]);
    };
});
var reverse = function () {
    var go = function go(__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return acc;
                };
                if (v instanceof Cons) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 1 - line 369, column 1: " + [acc.constructor.name, v.constructor.name]);
            };
        };
    };
    return go(Nil.value);
}();
var snoc = function snoc(xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = function () {
    var go = function go(__copy_acc) {
        return function (__copy_v) {
            return function (__copy_v1) {
                var acc = __copy_acc;
                var v = __copy_v;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v === 0) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Nil) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Cons) {
                        var __tco_acc = new Cons(v1.value0, acc);
                        var __tco_v = v - 1;
                        var __tco_v1 = v1.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 490, column 1 - line 491, column 1: " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
                };
            };
        };
    };
    return go(Nil.value);
}();
var takeWhile = function takeWhile(p) {
    var go = function go(__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Cons && p(v.value0)) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function go(__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var $186 = f(source);
                    if ($186 instanceof Data_Maybe.Nothing) {
                        return reverse(memo);
                    };
                    if ($186 instanceof Data_Maybe.Just) {
                        var __tco_memo = new Cons($186.value0.value0, memo);
                        source = $186.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 748, column 1 - line 755, column 1: " + [$186.constructor.name]);
                };
            };
        };
        return go(b)(Nil.value);
    };
});
var zipWith = function zipWith(f) {
    return function (xs) {
        return function (ys) {
            var go = function go(__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_acc) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (v instanceof Nil) {
                                return acc;
                            };
                            if (v1 instanceof Nil) {
                                return acc;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_acc = new Cons(f(v.value0)(v1.value0), acc);
                                v = __tco_v;
                                v1 = __tco_v1;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 654, column 1 - line 655, column 1: " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function replicateM(dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(replicateM(dictMonad)(n - 1)(m))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Cons(v, v1));
                    });
                });
            };
            throw new Error("Failed pattern match: " + [n.constructor.name, m.constructor.name]);
        };
    };
};
var replicate = function replicate(n) {
    return function (value) {
        var go = function go(__copy_n1) {
            return function (__copy_rest) {
                var n1 = __copy_n1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (n1 <= 0) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n1 = n1 - 1;
                        var __tco_rest = new Cons(value, rest);
                        n1 = __tco_n1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 148, column 1 - line 149, column 1: " + [n1.constructor.name, rest.constructor.name]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function range(start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function go(__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)(function () {
                var $209 = start > end;
                if ($209) {
                    return 1;
                };
                if (!$209) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [$209.constructor.name]);
            }())(Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [start.constructor.name, end.constructor.name]);
    };
};
var $dot$dot = range;
var $$null = function $$null(v) {
    if (v instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function mapMaybe(f) {
    var go = function go(__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    var $213 = f(v.value0);
                    if ($213 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if ($213 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons($213.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [$213.constructor.name]);
                };
                throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [acc.constructor.name, v.constructor.name]);
            };
        };
    };
    return go(Nil.value);
};
var some = function some(dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"](dictAlternative["__superclass_Prelude.Applicative_0"]()["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]()["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function many(dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"](dictAlternative["__superclass_Control.Plus.Plus_1"]()["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function last(__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v instanceof Cons && v.value1 instanceof Nil) {
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Cons) {
            var __tco_v = v.value1;
            v = __tco_v;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function insertBy(v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (v1 instanceof Cons) {
                var $226 = v(x)(v1.value0);
                if ($226 instanceof Prelude.GT) {
                    return new Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Cons(x, v1);
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
        };
    };
};
var insertAt = function insertAt(v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Cons(v1, v2));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(insertAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function insert(dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var init = function init(v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function go(__copy_v1) {
        return function (__copy_acc) {
            var v1 = __copy_v1;
            var acc = __copy_acc;
            tco: while (true) {
                if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                    return acc;
                };
                if (v1 instanceof Cons) {
                    var __tco_v1 = v1.value1;
                    var __tco_acc = new Cons(v1.value0, acc);
                    v1 = __tco_v1;
                    acc = __tco_acc;
                    continue tco;
                };
                return acc;
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(v)(Nil.value)));
};
var index = function index(__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Cons && v1 === 0) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Cons) {
                var __tco_v = v.value1;
                var __tco_v1 = v1 - 1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
        };
    };
};
var $bang$bang = index;
var head = function head(v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 236, column 1 - line 237, column 1: " + [v.constructor.name]);
};
var groupBy = function groupBy(v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            var $252 = span(v(v1.value0))(v1.value1);
            return new Cons(new Cons(v1.value0, $252.init), groupBy(v)($252.rest));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
    };
};
var group = function group(dictEq) {
    return groupBy(Prelude["=="](dictEq));
};
var group$prime = function group$prime(dictOrd) {
    return function ($364) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($364));
    };
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function go(__copy_v) {
            return function (__copy_acc) {
                var v = __copy_v;
                var acc = __copy_acc;
                tco: while (true) {
                    if (v instanceof Nil) {
                        return acc;
                    };
                    if (v instanceof Cons) {
                        var __tco_v = v.value1;
                        var __tco_acc = new Cons(f(v.value0), acc);
                        v = __tco_v;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 731, column 1 - line 738, column 1: " + [v.constructor.name, acc.constructor.name]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function fromList(dictUnfoldable) {
    return toUnfoldable(dictUnfoldable);
};
var fromFoldable = function fromFoldable(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
};
var toList = function toList(dictFoldable) {
    return fromFoldable(dictFoldable);
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($365) {
                return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($365));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function () {
    var go = function go(__copy_v) {
        return function (__copy_b) {
            return function (__copy_v1) {
                var v = __copy_v;
                var b = __copy_b;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v1 instanceof Nil) {
                        return b;
                    };
                    if (v1 instanceof Cons) {
                        var __tco_v = v;
                        var __tco_b = v(b)(v1.value0);
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        b = __tco_b;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match: " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
                };
            };
        };
    };
    return go;
}(), function (v) {
    return function (b) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return b;
            };
            if (v1 instanceof Cons) {
                return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Nil) {
            return Prelude.pure(dictApplicative)(Nil.value);
        };
        if (v instanceof Cons) {
            return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude.pure(dictApplicative)(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
        };
    };
});
var zipWithA = function zipWithA(dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function foldM(dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Nil) {
                    return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (v1 instanceof Cons) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match: " + [v.constructor.name, a.constructor.name, v1.constructor.name]);
            };
        };
    };
};
var findIndex = function findIndex(fn) {
    var go = function go(__copy_v) {
        return function (__copy_v1) {
            var v = __copy_v;
            var v1 = __copy_v1;
            tco: while (true) {
                if (v1 instanceof Cons) {
                    if (fn(v1.value0)) {
                        return new Data_Maybe.Just(v);
                    };
                    if (Prelude.otherwise) {
                        var __tco_v = v + 1 | 0;
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                };
                if (v1 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 1 - line 302, column 1: " + [v.constructor.name, v1.constructor.name]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function findLastIndex(fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["-"](Prelude.ringInt)(length(xs) - 1))(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function filterM(dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(v(v1.value0))(function (v2) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(function () {
                            if (v2) {
                                return new Cons(v1.value0, v3);
                            };
                            if (!v2) {
                                return v3;
                            };
                            throw new Error("Failed pattern match: " + [v2.constructor.name]);
                        }());
                    });
                });
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
        };
    };
};
var filter = function filter(p) {
    var go = function go(__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    if (p(v.value0)) {
                        var __tco_acc = new Cons(v.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 391, column 1 - line 392, column 1: " + [acc.constructor.name, v.constructor.name]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function intersectBy(v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function intersect(dictEq) {
    return intersectBy(Prelude["=="](dictEq));
};
var nubBy = function nubBy(v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return new Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
    };
};
var nub = function nub(dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var eqList = function eqList(dictEq) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function go(__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_v2) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var v2 = __copy_v2;
                        tco: while (true) {
                            if (!v2) {
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_v2 = v2 && Prelude["=="](dictEq)(v1.value0)(v.value0);
                                v = __tco_v;
                                v1 = __tco_v1;
                                v2 = __tco_v2;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function ordList(dictOrd) {
    return new Prelude.Ord(function () {
        return eqList(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function go(__copy_v) {
                return function (__copy_v1) {
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    tco: while (true) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (v instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var $321 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                            if ($321 instanceof Prelude.EQ) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            return $321;
                        };
                        throw new Error("Failed pattern match at Data.List line 713, column 1 - line 724, column 1: " + [v.constructor.name, v1.constructor.name]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function elemLastIndex(dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function elemIndex(dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function dropWhile(p) {
    var go = function go(__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && p(v.value0)) {
                var __tco_v = v.value1;
                v = __tco_v;
                continue tco;
            };
            return v;
        };
    };
    return go;
};
var drop = function drop(__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v === 0) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v1 instanceof Cons) {
                var __tco_v = v - 1;
                var __tco_v1 = v1.value1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
        };
    };
};
var slice = function slice(start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function deleteBy(v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Cons) {
                return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
    };
};
var unionBy = function unionBy(eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function union(dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var deleteAt = function deleteAt(v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v1.value0))(deleteAt(v - 1)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function $$delete(dictEq) {
    return deleteBy(Prelude["=="](dictEq));
};
var $bslash$bslash = function $bslash$bslash(dictEq) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(dictEq)));
};
var concatMap = function concatMap(v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return Prelude["<>"](semigroupList)(v(v1.value0))(concatMap(v)(v1.value1));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(v.value0)(v1))(Prelude["<*>"](applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, v1.constructor.name]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function concat(v) {
    return Prelude[">>="](bindList)(v)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function alterAt(v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return Data_Maybe.Just.create(function () {
                    var $357 = v1(v2.value0);
                    if ($357 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if ($357 instanceof Data_Maybe.Just) {
                        return new Cons($357.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match: " + [$357.constructor.name]);
                }());
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function modifyAt(n) {
    return function (f) {
        return alterAt(n)(function ($366) {
            return Data_Maybe.Just.create(f($366));
        });
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil,
    Cons: Cons,
    fromList: fromList,
    toList: toList,
    foldM: foldM,
    unzip: unzip,
    zip: zip,
    zipWithA: zipWithA,
    zipWith: zipWith,
    intersectBy: intersectBy,
    intersect: intersect,
    "\\\\": $bslash$bslash,
    deleteBy: deleteBy,
    "delete": $$delete,
    unionBy: unionBy,
    union: union,
    nubBy: nubBy,
    nub: nub,
    groupBy: groupBy,
    "group'": group$prime,
    group: group,
    span: span,
    dropWhile: dropWhile,
    drop: drop,
    takeWhile: takeWhile,
    take: take,
    slice: slice,
    sortBy: sortBy,
    sort: sort,
    catMaybes: catMaybes,
    mapMaybe: mapMaybe,
    filterM: filterM,
    filter: filter,
    concatMap: concatMap,
    concat: concat,
    reverse: reverse,
    alterAt: alterAt,
    modifyAt: modifyAt,
    updateAt: updateAt,
    deleteAt: deleteAt,
    insertAt: insertAt,
    findLastIndex: findLastIndex,
    findIndex: findIndex,
    elemLastIndex: elemLastIndex,
    elemIndex: elemIndex,
    index: index,
    "!!": $bang$bang,
    uncons: uncons,
    init: init,
    tail: tail,
    last: last,
    head: head,
    insertBy: insertBy,
    insert: insert,
    snoc: snoc,
    ":": $colon,
    length: length,
    "null": $$null,
    many: many,
    some: some,
    replicateM: replicateM,
    replicate: replicate,
    range: range,
    "..": $dot$dot,
    singleton: singleton,
    fromFoldable: fromFoldable,
    toUnfoldable: toUnfoldable,
    showList: showList,
    eqList: eqList,
    ordList: ordList,
    semigroupList: semigroupList,
    monoidList: monoidList,
    functorList: functorList,
    foldableList: foldableList,
    unfoldableList: unfoldableList,
    traversableList: traversableList,
    applyList: applyList,
    applicativeList: applicativeList,
    bindList: bindList,
    monadList: monadList,
    altList: altList,
    plusList: plusList,
    alternativeList: alternativeList,
    monadPlusList: monadPlusList
};

},{"Control.Alt":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js","Control.Alternative":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alternative/index.js","Control.Lazy":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.MonadPlus/index.js","Control.Plus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Data.Tuple":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Unfoldable/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function First(x) {
    return x;
};
var showFirst = function showFirst(dictShow) {
    return new Prelude.Show(function (v) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var runFirst = function runFirst(v) {
    return v;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(First($34));
        })(v);
    };
});
var eqFirst = function eqFirst(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordFirst = function ordFirst(dictOrd) {
    return new Prelude.Ord(function () {
        return eqFirst(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedFirst = function boundedFirst(dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runFirst(f($35));
        });
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, function ($36) {
    return First(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First,
    runFirst: runFirst,
    eqFirst: eqFirst,
    ordFirst: ordFirst,
    boundedFirst: boundedFirst,
    functorFirst: functorFirst,
    applyFirst: applyFirst,
    applicativeFirst: applicativeFirst,
    bindFirst: bindFirst,
    monadFirst: monadFirst,
    extendFirst: extendFirst,
    invariantFirst: invariantFirst,
    showFirst: showFirst,
    semigroupFirst: semigroupFirst,
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function Last(x) {
    return x;
};
var showLast = function showLast(dictShow) {
    return new Prelude.Show(function (v) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 57, column 1 - line 61, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var runLast = function runLast(v) {
    return v;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(Last($34));
        })(v);
    };
});
var eqLast = function eqLast(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordLast = function ordLast(dictOrd) {
    return new Prelude.Ord(function () {
        return eqLast(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedLast = function boundedLast(dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runLast(f($35));
        });
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, function ($36) {
    return Last(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last,
    runLast: runLast,
    eqLast: eqLast,
    ordLast: ordLast,
    boundedLast: boundedLast,
    functorLast: functorLast,
    applyLast: applyLast,
    applicativeLast: applicativeLast,
    bindLast: bindLast,
    monadLast: monadLast,
    extendLast: extendLast,
    invariantLast: invariantLast,
    showLast: showLast,
    semigroupLast: semigroupLast,
    monoidLast: monoidLast
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function fromJust(v) {
    if (v instanceof Data_Maybe.Just) {
        return v.value0;
    };
    if (v instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [v.constructor.name]);
};
module.exports = {
    fromJust: fromJust,
    unsafeThrow: $foreign.unsafeThrow
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/foreign.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Nothing = function () {
    function Nothing() {};
    Nothing.value = new Nothing();
    return Nothing;
}();
var Just = function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
}();
var showMaybe = function showMaybe(dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Just) {
            return "Just (" + (Prelude.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 289, column 1 - line 291, column 19: " + [v.constructor.name]);
    });
};
var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 231, column 1 - line 236, column 1: " + [v.constructor.name, v1.constructor.name]);
        };
    });
};
var monoidMaybe = function monoidMaybe(dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function maybe$prime(v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Prelude.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 39, column 1 - line 40, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
    };
};
var maybe = function maybe(v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function fromMaybe$prime(a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function fromMaybe(a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function eqMaybe(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return true;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function ordMaybe(dictOrd) {
    return new Prelude.Ord(function () {
        return eqMaybe(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude.compare(dictOrd)(v.value0)(v1.value0);
            };
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (v instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (v1 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 275, column 1: " + [v.constructor.name, v1.constructor.name]);
        };
    });
};
var boundedMaybe = function boundedMaybe(dictBounded) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(dictBounded)));
};
var boundedOrdMaybe = function boundedOrdMaybe(dictBoundedOrd) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(dictBoundedOrd["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(dictBoundedOrd["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Prelude["<$>"](functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var booleanAlgebraMaybe = function booleanAlgebraMaybe(dictBooleanAlgebra) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(dictBooleanAlgebra))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(dictBooleanAlgebra))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(dictBooleanAlgebra)));
};
var semiringMaybe = function semiringMaybe(dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Just(Prelude.one(dictSemiring)), new Just(Prelude.zero(dictSemiring)));
};
var moduloSemiringMaybe = function moduloSemiringMaybe(dictModuloSemiring) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(dictModuloSemiring["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(dictModuloSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(dictModuloSemiring))(x))(y);
        };
    });
};
var ringMaybe = function ringMaybe(dictRing) {
    return new Prelude.Ring(function () {
        return semiringMaybe(dictRing["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(dictRing))(x))(y);
        };
    });
};
var divisionRingMaybe = function divisionRingMaybe(dictDivisionRing) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(dictDivisionRing["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function numMaybe(dictNum) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(dictNum["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing,
    Just: Just,
    isNothing: isNothing,
    isJust: isJust,
    "fromMaybe'": fromMaybe$prime,
    fromMaybe: fromMaybe,
    "maybe'": maybe$prime,
    maybe: maybe,
    functorMaybe: functorMaybe,
    applyMaybe: applyMaybe,
    applicativeMaybe: applicativeMaybe,
    altMaybe: altMaybe,
    plusMaybe: plusMaybe,
    alternativeMaybe: alternativeMaybe,
    bindMaybe: bindMaybe,
    monadMaybe: monadMaybe,
    monadPlusMaybe: monadPlusMaybe,
    extendMaybe: extendMaybe,
    invariantMaybe: invariantMaybe,
    semigroupMaybe: semigroupMaybe,
    monoidMaybe: monoidMaybe,
    semiringMaybe: semiringMaybe,
    moduloSemiringMaybe: moduloSemiringMaybe,
    ringMaybe: ringMaybe,
    divisionRingMaybe: divisionRingMaybe,
    numMaybe: numMaybe,
    eqMaybe: eqMaybe,
    ordMaybe: ordMaybe,
    boundedMaybe: boundedMaybe,
    boundedOrdMaybe: boundedOrdMaybe,
    booleanAlgebraMaybe: booleanAlgebraMaybe,
    showMaybe: showMaybe
};

},{"Control.Alt":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alt/index.js","Control.Alternative":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Alternative/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Control.MonadPlus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.MonadPlus/index.js","Control.Plus":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Plus/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function Additive(x) {
    return x;
};
var showAdditive = function showAdditive(dictShow) {
    return new Prelude.Show(function (v) {
        return "Additive (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function semigroupAdditive(dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["+"](dictSemiring)(v)(v1);
        };
    });
};
var runAdditive = function runAdditive(v) {
    return v;
};
var monoidAdditive = function monoidAdditive(dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Prelude.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function eqAdditive(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordAdditive = function ordAdditive(dictOrd) {
    return new Prelude.Ord(function () {
        return eqAdditive(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive,
    runAdditive: runAdditive,
    eqAdditive: eqAdditive,
    ordAdditive: ordAdditive,
    functorAdditive: functorAdditive,
    applyAdditive: applyAdditive,
    applicativeAdditive: applicativeAdditive,
    bindAdditive: bindAdditive,
    monadAdditive: monadAdditive,
    extendAdditive: extendAdditive,
    comonadAdditive: comonadAdditive,
    invariantAdditive: invariantAdditive,
    showAdditive: showAdditive,
    semigroupAdditive: semigroupAdditive,
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function Conj(x) {
    return x;
};
var showConj = function showConj(dictShow) {
    return new Prelude.Show(function (v) {
        return "Conj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringConj = function semiringConj(dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupConj = function semigroupConj(dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runConj = function runConj(v) {
    return v;
};
var monoidConj = function monoidConj(dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictBooleanAlgebra);
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function eqConj(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordConj = function ordConj(dictOrd) {
    return new Prelude.Ord(function () {
        return eqConj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function boundedConj(dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj,
    runConj: runConj,
    eqConj: eqConj,
    ordConj: ordConj,
    boundedConj: boundedConj,
    functorConj: functorConj,
    applyConj: applyConj,
    applicativeConj: applicativeConj,
    bindConj: bindConj,
    monadConj: monadConj,
    extendConj: extendConj,
    comonadConj: comonadConj,
    showConj: showConj,
    semigroupConj: semigroupConj,
    monoidConj: monoidConj,
    semiringConj: semiringConj
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function Disj(x) {
    return x;
};
var showDisj = function showDisj(dictShow) {
    return new Prelude.Show(function (v) {
        return "Disj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function semiringDisj(dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupDisj = function semigroupDisj(dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runDisj = function runDisj(v) {
    return v;
};
var monoidDisj = function monoidDisj(dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictBooleanAlgebra);
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function eqDisj(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDisj = function ordDisj(dictOrd) {
    return new Prelude.Ord(function () {
        return eqDisj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function boundedDisj(dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj,
    runDisj: runDisj,
    eqDisj: eqDisj,
    ordDisj: ordDisj,
    boundedDisj: boundedDisj,
    functorDisj: functorDisj,
    applyDisj: applyDisj,
    applicativeDisj: applicativeDisj,
    bindDisj: bindDisj,
    monadDisj: monadDisj,
    extendDisj: extendDisj,
    comonadDisj: comonadDisj,
    showDisj: showDisj,
    semigroupDisj: semigroupDisj,
    monoidDisj: monoidDisj,
    semiringDisj: semiringDisj
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Dual = function Dual(x) {
    return x;
};
var showDual = function showDual(dictShow) {
    return new Prelude.Show(function (v) {
        return "Dual (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function semigroupDual(dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v1)(v);
        };
    });
};
var runDual = function runDual(v) {
    return v;
};
var monoidDual = function monoidDual(dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function eqDual(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDual = function ordDual(dictOrd) {
    return new Prelude.Ord(function () {
        return eqDual(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual,
    runDual: runDual,
    eqDual: eqDual,
    ordDual: ordDual,
    functorDual: functorDual,
    applyDual: applyDual,
    applicativeDual: applicativeDual,
    bindDual: bindDual,
    monadDual: monadDual,
    extendDual: extendDual,
    comonadDual: comonadDual,
    invariantDual: invariantDual,
    showDual: showDual,
    semigroupDual: semigroupDual,
    monoidDual: monoidDual
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Endo/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Endo = function Endo(x) {
    return x;
};
var semigroupEndo = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return function ($10) {
            return v(v1($10));
        };
    };
});
var runEndo = function runEndo(v) {
    return v;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($11) {
                return ab(v(ba($11)));
            };
        };
    };
});
module.exports = {
    Endo: Endo,
    runEndo: runEndo,
    invariantEndo: invariantEndo,
    semigroupEndo: semigroupEndo,
    monoidEndo: monoidEndo
};

},{"Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function Multiplicative(x) {
    return x;
};
var showMultiplicative = function showMultiplicative(dictShow) {
    return new Prelude.Show(function (v) {
        return "Multiplicative (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["*"](dictSemiring)(v)(v1);
        };
    });
};
var runMultiplicative = function runMultiplicative(v) {
    return v;
};
var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Prelude.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function eqMultiplicative(dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordMultiplicative = function ordMultiplicative(dictOrd) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative,
    runMultiplicative: runMultiplicative,
    eqMultiplicative: eqMultiplicative,
    ordMultiplicative: ordMultiplicative,
    functorMultiplicative: functorMultiplicative,
    applyMultiplicative: applyMultiplicative,
    applicativeMultiplicative: applicativeMultiplicative,
    bindMultiplicative: bindMultiplicative,
    monadMultiplicative: monadMultiplicative,
    extendMultiplicative: extendMultiplicative,
    comonadMultiplicative: comonadMultiplicative,
    invariantMultiplicative: invariantMultiplicative,
    showMultiplicative: showMultiplicative,
    semigroupMultiplicative: semigroupMultiplicative,
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Monoid = function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, []);
var mempty = function mempty(dict) {
    return dict.mempty;
};
var monoidFn = function monoidFn(dictMonoid) {
    return new Monoid(function () {
        return Prelude.semigroupFn(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(dictMonoid)));
};
module.exports = {
    Monoid: Monoid,
    mempty: mempty,
    monoidUnit: monoidUnit,
    monoidFn: monoidFn,
    monoidString: monoidString,
    monoidArray: monoidArray
};

},{"Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Nullable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Nullable

exports["null"] = null;

exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
};

exports.notNull = function (x) {
    return x;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Nullable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function toMaybe(n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function showNullable(dictShow) {
    return new Prelude.Show(function (n) {
        var $3 = toMaybe(n);
        if ($3 instanceof Data_Maybe.Nothing) {
            return "null";
        };
        if ($3 instanceof Data_Maybe.Just) {
            return Prelude.show(dictShow)($3.value0);
        };
        throw new Error("Failed pattern match at Data.Nullable line 37, column 1 - line 42, column 1: " + [$3.constructor.name]);
    });
};
var eqNullable = function eqNullable(dictEq) {
    return new Prelude.Eq(Data_Function.on(Prelude.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function ordNullable(dictOrd) {
    return new Prelude.Ord(function () {
        return eqNullable(dictOrd["__superclass_Prelude.Eq_0"]());
    }, Data_Function.on(Prelude.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
module.exports = {
    toNullable: toNullable,
    toMaybe: toMaybe,
    showNullable: showNullable,
    eqNullable: eqNullable,
    ordNullable: ordNullable
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Nullable/foreign.js","Data.Function":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Function/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
module.exports = {
    charCodeAt: $foreign.charCodeAt,
    charAt: $foreign.charAt,
    "char": $foreign["char"]
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String.Unsafe/foreign.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++) {}{}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_String_Unsafe = require("Data.String.Unsafe");
var uncons = function uncons(v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v),
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function takeWhile(p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function $$null(s) {
    return $foreign.length(s) === 0;
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function stripSuffix(suffix) {
    return function (str) {
        var $2 = lastIndexOf(suffix)(str);
        if ($2 instanceof Data_Maybe.Just && $2.value0 === $foreign.length(str) - $foreign.length(suffix)) {
            return Data_Maybe.Just.create($foreign.take($2.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function stripPrefix(prefix) {
    return function (str) {
        var $4 = indexOf(prefix)(str);
        if ($4 instanceof Data_Maybe.Just && $4.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function dropWhile(p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function contains(x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix,
    stripPrefix: stripPrefix,
    dropWhile: dropWhile,
    takeWhile: takeWhile,
    localeCompare: localeCompare,
    singleton: singleton,
    uncons: uncons,
    "null": $$null,
    "lastIndexOf'": lastIndexOf$prime,
    lastIndexOf: lastIndexOf,
    "indexOf'": indexOf$prime,
    indexOf: indexOf,
    contains: contains,
    toChar: toChar,
    fromChar: fromChar,
    charCodeAt: charCodeAt,
    charAt: charAt,
    joinWith: $foreign.joinWith,
    trim: $foreign.trim,
    toUpper: $foreign.toUpper,
    toLower: $foreign.toLower,
    toCharArray: $foreign.toCharArray,
    split: $foreign.split,
    drop: $foreign.drop,
    take: $foreign.take,
    count: $foreign.count,
    replace: $foreign.replace,
    length: $foreign.length,
    fromCharArray: $foreign.fromCharArray
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String/foreign.js","Data.Char":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Char/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.String.Unsafe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.String.Unsafe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function ConsCell(head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function buildFrom(x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function go(acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var StateL = function StateL(x) {
    return x;
};
var StateR = function StateR(x) {
    return x;
};
var Traversable = function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function traverse(dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [v.constructor.name]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [v.constructor.name, v1.constructor.name]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var stateR = function stateR(v) {
    return v;
};
var stateL = function stateL(v) {
    return v;
};
var sequenceDefault = function sequenceDefault(dictTraversable) {
    return function (dictApplicative) {
        return function (tma) {
            return traverse(dictTraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(tma);
        };
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Prelude.apply(dictApplicative["__superclass_Prelude.Apply_0"]()))(Prelude.map(dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]()))(Prelude.pure(dictApplicative));
});
var sequence = function sequence(dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function traverseDefault(dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Prelude.map(dictTraversable["__superclass_Prelude.Functor_0"]())(f)(ta));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $75 = stateR(k)(s);
            return {
                accum: $75.accum,
                value: f($75.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $78 = stateL(k)(s);
            return {
                accum: $78.accum,
                value: f($78.value)
            };
        };
    };
});
var $$for = function $$for(dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var $81 = stateR(x)(s);
            var $82 = stateR(f)($81.accum);
            return {
                accum: $82.accum,
                value: $82.value($81.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var $87 = stateL(f)(s);
            var $88 = stateL(x)($87.accum);
            return {
                accum: $88.accum,
                value: $87.value($88.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var mapAccumR = function mapAccumR(dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function scanr(dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s,
            value: a
        };
    };
});
var mapAccumL = function mapAccumL(dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function scanl(dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable,
    mapAccumR: mapAccumR,
    mapAccumL: mapAccumL,
    scanr: scanr,
    scanl: scanl,
    "for": $$for,
    sequenceDefault: sequenceDefault,
    traverseDefault: traverseDefault,
    sequence: sequence,
    traverse: traverse,
    traversableArray: traversableArray,
    traversableMaybe: traversableMaybe,
    traversableFirst: traversableFirst,
    traversableLast: traversableLast,
    traversableAdditive: traversableAdditive,
    traversableDual: traversableDual,
    traversableConj: traversableConj,
    traversableDisj: traversableDisj,
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/foreign.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Last/index.js","Data.Monoid.Additive":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Control_Lazy = require("Control.Lazy");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Tuple = function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
}();
var uncurry = function uncurry(f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function swap(v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function snd(v) {
    return v.value1;
};
var showTuple = function showTuple(dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            return "Tuple (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function semiringTuple(dictSemiring) {
    return function (dictSemiring1) {
        return new Prelude.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Prelude.add(dictSemiring)(v.value0)(v1.value0), Prelude.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mul(dictSemiring)(v.value0)(v1.value0), Prelude.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Prelude.one(dictSemiring), Prelude.one(dictSemiring1)), new Tuple(Prelude.zero(dictSemiring), Prelude.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function semigroupTuple(dictSemigroup) {
    return function (dictSemigroup1) {
        return new Prelude.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), Prelude["<>"](dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function ringTuple(dictRing) {
    return function (dictRing1) {
        return new Prelude.Ring(function () {
            return semiringTuple(dictRing["__superclass_Prelude.Semiring_0"]())(dictRing1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.sub(dictRing)(v.value0)(v1.value0), Prelude.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function monoidTuple(dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonoid1["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var moduloSemiringTuple = function moduloSemiringTuple(dictModuloSemiring) {
    return function (dictModuloSemiring1) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(dictModuloSemiring["__superclass_Prelude.Semiring_0"]())(dictModuloSemiring1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.div(dictModuloSemiring)(v.value0)(v1.value0), Prelude.div(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mod(dictModuloSemiring)(v.value0)(v1.value0), Prelude.mod(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        });
    };
};
var lookup = function lookup(dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $145 = Prelude["=="](dictEq)(a)(v.value0);
                    if ($145) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    if (!$145) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 173, column 1 - line 174, column 1: " + [$145.constructor.name]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function fst(v) {
    return v.value0;
};
var lazyTuple = function lazyTuple(dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function eqTuple(dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0) && Prelude["=="](dictEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var ordTuple = function ordTuple(dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqTuple(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                var $190 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                if ($190 instanceof Prelude.EQ) {
                    return Prelude.compare(dictOrd1)(v.value1)(v1.value1);
                };
                return $190;
            };
        });
    };
};
var divisionRingTuple = function divisionRingTuple(dictDivisionRing) {
    return function (dictDivisionRing1) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]())(dictDivisionRing1["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(dictDivisionRing["__superclass_Prelude.Ring_0"]())(dictDivisionRing1["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function numTuple(dictNum) {
    return function (dictNum1) {
        return new Prelude.Num(function () {
            return divisionRingTuple(dictNum["__superclass_Prelude.DivisionRing_0"]())(dictNum1["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function curry(f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function boundedTuple(dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(dictBounded), Prelude.bottom(dictBounded1)), new Tuple(Prelude.top(dictBounded), Prelude.top(dictBounded1)));
    };
};
var boundedOrdTuple = function boundedOrdTuple(dictBoundedOrd) {
    return function (dictBoundedOrd1) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(dictBoundedOrd["__superclass_Prelude.Bounded_0"]())(dictBoundedOrd1["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(dictBoundedOrd["__superclass_Prelude.Ord_1"]())(dictBoundedOrd1["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())(dictBooleanAlgebra1["__superclass_Prelude.Bounded_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.conj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.conj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.disj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.disj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Prelude.not(dictBooleanAlgebra)(v.value0), Prelude.not(dictBooleanAlgebra1)(v.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](dictApplicative["__superclass_Prelude.Apply_0"]()["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function applyTuple(dictSemigroup) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function bindTuple(dictSemigroup) {
    return new Prelude.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var $254 = f(v.value1);
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)($254.value0), $254.value1);
        };
    });
};
var applicativeTuple = function applicativeTuple(dictMonoid) {
    return new Prelude.Applicative(function () {
        return applyTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function monadTuple(dictMonoid) {
    return new Prelude.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple,
    lookup: lookup,
    swap: swap,
    uncurry: uncurry,
    curry: curry,
    snd: snd,
    fst: fst,
    showTuple: showTuple,
    eqTuple: eqTuple,
    ordTuple: ordTuple,
    boundedTuple: boundedTuple,
    boundedOrdTuple: boundedOrdTuple,
    semigroupoidTuple: semigroupoidTuple,
    semigroupTuple: semigroupTuple,
    monoidTuple: monoidTuple,
    semiringTuple: semiringTuple,
    moduloSemiringTuple: moduloSemiringTuple,
    ringTuple: ringTuple,
    divisionRingTuple: divisionRingTuple,
    numTuple: numTuple,
    booleanAlgebraTuple: booleanAlgebraTuple,
    functorTuple: functorTuple,
    invariantTuple: invariantTuple,
    bifunctorTuple: bifunctorTuple,
    applyTuple: applyTuple,
    biapplyTuple: biapplyTuple,
    applicativeTuple: applicativeTuple,
    biapplicativeTuple: biapplicativeTuple,
    bindTuple: bindTuple,
    monadTuple: monadTuple,
    extendTuple: extendTuple,
    comonadTuple: comonadTuple,
    lazyTuple: lazyTuple,
    foldableTuple: foldableTuple,
    bifoldableTuple: bifoldableTuple,
    traversableTuple: traversableTuple,
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Biapplicative/index.js","Control.Biapply":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Biapply/index.js","Control.Comonad":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Comonad/index.js","Control.Extend":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Extend/index.js","Control.Lazy":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Lazy/index.js","Data.Bifoldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.First/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Array_ST = require("Data.Array.ST");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Unfoldable = function Unfoldable(unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function unfoldr(dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!function __do() {
                    var v2 = Control_Monad_ST.readSTRef(v1)();
                    var $12 = f(v2);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return true;
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        Data_Array_ST.pushSTArray(v)($12.value0.value0)();
                        Control_Monad_ST.writeSTRef(v1)($12.value0.value1)();
                        return false;
                    };
                    throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [$12.constructor.name]);
                }()) {};
                return {};
            })();
            return v;
        }));
    };
});
var replicate = function replicate(dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function step(i) {
                var $16 = i <= 0;
                if ($16) {
                    return Data_Maybe.Nothing.value;
                };
                if (!$16) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                };
                throw new Error("Failed pattern match at Data.Unfoldable line 52, column 5 - line 53, column 5: " + [$16.constructor.name]);
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function replicateA(dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function singleton(dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var none = function none(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.unit);
};
module.exports = {
    Unfoldable: Unfoldable,
    singleton: singleton,
    none: none,
    replicateA: replicateA,
    replicate: replicate,
    unfoldr: unfoldr,
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.ST/index.js","Data.Array.ST":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array.ST/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Traversable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Traversable/index.js","Data.Tuple":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Tuple/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Prelude = require("Prelude");
var Control_Bind = require("Control.Bind");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array = require("Data.Array");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var DOM = require("DOM");
var Pux_App = require("Pux.App");
var Pux_DOM = require("Pux.DOM");
var Pux_DOM_HTML_Elements = require("Pux.DOM.HTML.Elements");
var Pux_DOM_HTML_Attributes = require("Pux.DOM.HTML.Attributes");
var Pux_React = require("Pux.React");
var Pux_Render_DOM = require("Pux.Render.DOM");
var Signal = require("Signal");
var Signal_Channel = require("Signal.Channel");
var Signal_DOM = require("Signal.DOM");
var Up = function () {
    function Up() {};
    Up.value = new Up();
    return Up;
}();
var Down = function () {
    function Down() {};
    Down.value = new Down();
    return Down;
}();
var Left = function () {
    function Left() {};
    Left.value = new Left();
    return Left;
}();
var Right = function () {
    function Right() {};
    Right.value = new Right();
    return Right;
}();
var Coords = function () {
    function Coords(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Coords.create = function (value0) {
        return function (value1) {
            return new Coords(value0, value1);
        };
    };
    return Coords;
}();
var MoveCursor = function () {
    function MoveCursor(value0) {
        this.value0 = value0;
    };
    MoveCursor.create = function (value0) {
        return new MoveCursor(value0);
    };
    return MoveCursor;
}();
var ClearScreen = function () {
    function ClearScreen() {};
    ClearScreen.value = new ClearScreen();
    return ClearScreen;
}();
var pointView = function pointView(increment) {
    return function (subkey) {
        return function (v) {
            return Pux_DOM["!"](Pux_DOM.attributableVDomM)(Pux_DOM["!"](Pux_DOM.attributableVDomM)(Pux_DOM["!"](Pux_DOM.attributableVDomM)(Pux_DOM["!"](Pux_DOM.attributableVDomM)(Pux_DOM["!"](Pux_DOM.attributableVDomM)(Pux_DOM_HTML_Elements.leaf("rect"))(Pux_DOM_HTML_Attributes.key(subkey + (Prelude.show(Prelude.showInt)(v.value0) + ("," + Prelude.show(Prelude.showInt)(v.value1))))))(Pux_DOM_HTML_Attributes.width(Prelude.show(Prelude.showInt)(increment))))(Pux_DOM_HTML_Attributes.height(Prelude.show(Prelude.showInt)(increment))))(Pux_React.makeAttr("x")(Prelude.show(Prelude.showInt)(v.value0 * increment | 0))))(Pux_React.makeAttr("y")(Prelude.show(Prelude.showInt)(v.value1 * increment | 0)));
        };
    };
};
var view = function view(state) {
    var pointView$prime = pointView(state.increment);
    var points = Prelude.map(Prelude.functorArray)(pointView$prime("pointView"))(state.points);
    var cursor = pointView$prime("cursor")(state.cursor);
    return Pux_DOM_HTML_Elements.div(Prelude.bind(Pux_DOM.bindVDomM)(Pux_DOM_HTML_Elements.div(Pux_DOM["!"](Pux_DOM.attributableVDomMF)(Pux_DOM_HTML_Elements.button)(Pux_DOM_HTML_Attributes.onClick(Pux_DOM_HTML_Attributes.send(ClearScreen.value)))(Pux_DOM_HTML_Elements.text("Clear"))))(function () {
        return Pux_DOM_HTML_Elements.div(Pux_DOM["!"](Pux_DOM.attributableVDomMF)(Pux_DOM["!"](Pux_DOM.attributableVDomMF)(Pux_DOM["!"](Pux_DOM.attributableVDomMF)(Pux_DOM_HTML_Elements.parent("svg"))(Pux_DOM_HTML_Attributes.style({
            border: "1px solid black"
        })))(Pux_DOM_HTML_Attributes.width(Prelude.show(Prelude.showInt)(state.width))))(Pux_DOM_HTML_Attributes.height(Prelude.show(Prelude.showInt)(state.height)))(Prelude["<>"](Pux_DOM.semigroupVDomM)(cursor)(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Pux_DOM.monoidVDom)(points))));
    }));
};
var isInvalidPoint = function isInvalidPoint(state) {
    return function (v) {
        return v.value0 < 0 || (state.increment * v.value0 | 0) > state.width - state.increment || v.value1 < 0 || (state.increment * v.value1 | 0) > state.height - state.increment;
    };
};
var initState = {
    cursor: new Coords(0, 0),
    points: [],
    width: 800,
    height: 600,
    increment: 10
};
var eqCoords = new Prelude.Eq(function (v) {
    return function (v1) {
        return v.value0 === v1.value0 && v.value1 === v1.value1;
    };
});
var insertPoint = function insertPoint(point) {
    return function (points) {
        var $24 = Data_Array.elemIndex(eqCoords)(point)(points);
        if ($24 instanceof Data_Maybe.Just) {
            return points;
        };
        if ($24 instanceof Data_Maybe.Nothing) {
            return Data_Array.cons(point)(points);
        };
        throw new Error("Failed pattern match at Main line 56, column 1 - line 57, column 1: " + [$24.constructor.name]);
    };
};
var moveCursor = function moveCursor(direction) {
    return function (state) {
        var points$prime = insertPoint(state.cursor)(state.points);
        var cursor$prime = function () {
            if (direction instanceof Up) {
                return new Coords(state.cursor.value0, state.cursor.value1 - 1);
            };
            if (direction instanceof Down) {
                return new Coords(state.cursor.value0, state.cursor.value1 + 1 | 0);
            };
            if (direction instanceof Left) {
                return new Coords(state.cursor.value0 - 1, state.cursor.value1);
            };
            if (direction instanceof Right) {
                return new Coords(state.cursor.value0 + 1 | 0, state.cursor.value1);
            };
            throw new Error("Failed pattern match at Main line 67, column 11 - line 73, column 7: " + [direction.constructor.name]);
        }();
        var $28 = isInvalidPoint(state)(cursor$prime);
        if ($28) {
            return state;
        };
        if (!$28) {
            var $29 = {};
            for (var $30 in state) {
                if (state.hasOwnProperty($30)) {
                    $29[$30] = state[$30];
                };
            };
            $29.cursor = cursor$prime;
            $29.points = points$prime;
            return $29;
        };
        throw new Error("Failed pattern match at Main line 62, column 1 - line 63, column 1: " + [$28.constructor.name]);
    };
};
var update = function update(v) {
    return function (state) {
        return function (input) {
            if (v instanceof MoveCursor) {
                return {
                    state: moveCursor(v.value0)(state),
                    effects: []
                };
            };
            if (v instanceof ClearScreen) {
                return {
                    state: function () {
                        var $37 = {};
                        for (var $38 in state) {
                            if (state.hasOwnProperty($38)) {
                                $37[$38] = state[$38];
                            };
                        };
                        $37.points = [];
                        return $37;
                    }(),
                    effects: []
                };
            };
            throw new Error("Failed pattern match at Main line 77, column 1 - line 78, column 1: " + [v.constructor.name, state.constructor.name, input.constructor.name]);
        };
    };
};
var main = function __do() {
    var v = Signal_DOM.keyPressed(38)();
    var v1 = Signal_DOM.keyPressed(40)();
    var v2 = Signal_DOM.keyPressed(37)();
    var v3 = Signal_DOM.keyPressed(39)();
    return Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Pux_Render_DOM.renderToDOM("#app"))(Pux_App.app({
        state: initState,
        update: update,
        view: view,
        inputs: [Signal.sampleOn(v)(Signal.constant(new MoveCursor(Up.value))), Signal.sampleOn(v1)(Signal.constant(new MoveCursor(Down.value))), Signal.sampleOn(v2)(Signal.constant(new MoveCursor(Left.value))), Signal.sampleOn(v3)(Signal.constant(new MoveCursor(Right.value)))]
    }))();
};
module.exports = {
    MoveCursor: MoveCursor,
    ClearScreen: ClearScreen,
    Coords: Coords,
    Up: Up,
    Down: Down,
    Left: Left,
    Right: Right,
    main: main,
    view: view,
    pointView: pointView,
    update: update,
    moveCursor: moveCursor,
    insertPoint: insertPoint,
    isInvalidPoint: isInvalidPoint,
    initState: initState,
    eqCoords: eqCoords
};

},{"Control.Bind":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Bind/index.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Data.Array":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.App":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.App/index.js","Pux.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js","Pux.DOM.HTML.Attributes":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM.HTML.Attributes/index.js","Pux.DOM.HTML.Elements":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM.HTML.Elements/index.js","Pux.React":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/index.js","Pux.Render.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.Render.DOM/index.js","Signal":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js","Signal.Channel":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js","Signal.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.DOM/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Math/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Math/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2,
    sqrt1_2: $foreign.sqrt1_2,
    pi: $foreign.pi,
    log10e: $foreign.log10e,
    log2e: $foreign.log2e,
    ln10: $foreign.ln10,
    ln2: $foreign.ln2,
    e: $foreign.e,
    "%": $foreign["%"],
    tan: $foreign.tan,
    sqrt: $foreign.sqrt,
    sin: $foreign.sin,
    round: $foreign.round,
    pow: $foreign.pow,
    min: $foreign.min,
    max: $foreign.max,
    log: $foreign.log,
    floor: $foreign.floor,
    exp: $foreign.exp,
    cos: $foreign.cos,
    ceil: $foreign.ceil,
    atan2: $foreign.atan2,
    atan: $foreign.atan,
    asin: $foreign.asin,
    acos: $foreign.acos,
    abs: $foreign.abs
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Math/foreign.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\a":
        return "'\\a'";
      case "\b":
        return "'\\b'";
      case "\f":
        return "'\\f'";
      case "\n":
        return "'\\n'";
      case "\r":
        return "'\\r'";
      case "\t":
        return "'\\t'";
      case "\v":
        return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function (c, i) {
    // jshint ignore:line
    switch (c) {
      case "\"":
      case "\\":
        return "\\" + c;
      case "\a":
        return "\\a";
      case "\b":
        return "\\b";
      case "\f":
        return "\\f";
      case "\n":
        return "\\n";
      case "\r":
        return "\\r";
      case "\t":
        return "\\t";
      case "\v":
        return "\\v";
    }
    var k = i + 1;
    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
    return "\\" + c.charCodeAt(0).toString(10) + empty;
  }) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Unit = function Unit(x) {
    return x;
};
var LT = function () {
    function LT() {};
    LT.value = new LT();
    return LT;
}();
var GT = function () {
    function GT() {};
    GT.value = new GT();
    return GT;
}();
var EQ = function () {
    function EQ() {};
    EQ.value = new EQ();
    return EQ;
}();
var Semigroupoid = function Semigroupoid(compose) {
    this.compose = compose;
};
var Category = function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function Functor(map) {
    this.map = map;
};
var Apply = function Apply(__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function Applicative(__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function Bind(__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function Semigroup(append) {
    this.append = append;
};
var Semiring = function Semiring(add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function Ring(__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function ModuloSemiring(__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function DivisionRing(__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function Num(__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function Eq(eq) {
    this.eq = eq;
};
var Ord = function Ord(__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function Bounded(bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function BoundedOrd(__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function BooleanAlgebra(__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function Show(show) {
    this.show = show;
};
var $dollar = function $dollar(f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function $hash(x) {
    return function (f) {
        return f(x);
    };
};
var zero = function zero(dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function top(dict) {
    return dict.top;
};
var sub = function sub(dict) {
    return dict.sub;
};
var $minus = function $minus(dictRing) {
    return sub(dictRing);
};
var showUnit = new Show(function (v) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Prelude line 863, column 1 - line 868, column 1: " + [v.constructor.name]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Prelude line 841, column 1 - line 845, column 1: " + [v.constructor.name]);
});
var show = function show(dict) {
    return dict.show;
};
var showArray = function showArray(dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Prelude line 413, column 1 - line 418, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function pure(dict) {
    return dict.pure;
};
var $$return = function $$return(dictApplicative) {
    return pure(dictApplicative);
};
var otherwise = true;
var one = function one(dict) {
    return dict.one;
};
var not = function not(dict) {
    return dict.not;
};
var negate = function negate(dictRing) {
    return function (a) {
        return $minus(dictRing)(zero(dictRing["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function mul(dict) {
    return dict.mul;
};
var $times = function $times(dictSemiring) {
    return mul(dictSemiring);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function mod(dict) {
    return dict.mod;
};
var map = function map(dict) {
    return dict.map;
};
var $less$dollar$greater = function $less$dollar$greater(dictFunctor) {
    return map(dictFunctor);
};
var $less$hash$greater = function $less$hash$greater(dictFunctor) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(dictFunctor)(f)(fa);
        };
    };
};
var id = function id(dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function flip(f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (v) {
    return function (v1) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return EQ.value;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return EQ.value;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return EQ.value;
        };
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof EQ && v1 instanceof LT) {
            return GT.value;
        };
        if (v instanceof EQ && v1 instanceof GT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at Prelude line 668, column 1 - line 677, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function eq(dict) {
    return dict.eq;
};
var $eq$eq = function $eq$eq(dictEq) {
    return eq(dictEq);
};
var eqArray = function eqArray(dictEq) {
    return new Eq($foreign.eqArrayImpl($eq$eq(dictEq)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function div(dict) {
    return dict.div;
};
var $div = function $div(dictModuloSemiring) {
    return div(dictModuloSemiring);
};
var disj = function disj(dict) {
    return dict.disj;
};
var $bar$bar = function $bar$bar(dictBooleanAlgebra) {
    return disj(dictBooleanAlgebra);
};
var $$const = function $$const(a) {
    return function (v) {
        return a;
    };
};
var $$void = function $$void(dictFunctor) {
    return function (fa) {
        return $less$dollar$greater(dictFunctor)($$const(unit))(fa);
    };
};
var conj = function conj(dict) {
    return dict.conj;
};
var $amp$amp = function $amp$amp(dictBooleanAlgebra) {
    return conj(dictBooleanAlgebra);
};
var compose = function compose(dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function $less$less$less(dictSemigroupoid) {
    return compose(dictSemigroupoid);
};
var $greater$greater$greater = function $greater$greater$greater(dictSemigroupoid) {
    return flip(compose(dictSemigroupoid));
};
var compare = function compare(dict) {
    return dict.compare;
};
var ordArray = function ordArray(dictOrd) {
    return new Ord(function () {
        return eqArray(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var $79 = compare(dictOrd)(x)(y);
                    if ($79 instanceof EQ) {
                        return 0;
                    };
                    if ($79 instanceof LT) {
                        return 1;
                    };
                    if ($79 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at Prelude line 660, column 1 - line 666, column 1: " + [$79.constructor.name]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function $less(dictOrd) {
    return function (a1) {
        return function (a2) {
            var $80 = compare(dictOrd)(a1)(a2);
            if ($80 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function $less$eq(dictOrd) {
    return function (a1) {
        return function (a2) {
            var $81 = compare(dictOrd)(a1)(a2);
            if ($81 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function $greater(dictOrd) {
    return function (a1) {
        return function (a2) {
            var $82 = compare(dictOrd)(a1)(a2);
            if ($82 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function $greater$eq(dictOrd) {
    return function (a1) {
        return function (a2) {
            var $83 = compare(dictOrd)(a1)(a2);
            if ($83 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function bottom(dict) {
    return dict.bottom;
};
var boundedFn = function boundedFn(dictBounded) {
    return new Bounded(function (v) {
        return bottom(dictBounded);
    }, function (v) {
        return top(dictBounded);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return unit;
});
var booleanAlgebraFn = function booleanAlgebraFn(dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return boundedFn(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(dictBooleanAlgebra)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function $div$eq(dictEq) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(dictEq)(x)(y));
        };
    };
};
var bind = function bind(dict) {
    return dict.bind;
};
var liftM1 = function liftM1(dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v) {
                return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(f(v));
            });
        };
    };
};
var $greater$greater$eq = function $greater$greater$eq(dictBind) {
    return bind(dictBind);
};
var asTypeOf = function asTypeOf(x) {
    return function (v) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function apply(dict) {
    return dict.apply;
};
var $less$times$greater = function $less$times$greater(dictApply) {
    return apply(dictApply);
};
var liftA1 = function liftA1(dictApplicative) {
    return function (f) {
        return function (a) {
            return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function append(dict) {
    return dict.append;
};
var $plus$plus = function $plus$plus(dictSemigroup) {
    return append(dictSemigroup);
};
var $less$greater = function $less$greater(dictSemigroup) {
    return append(dictSemigroup);
};
var semigroupFn = function semigroupFn(dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var ap = function ap(dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                    return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [x];
});
var add = function add(dict) {
    return dict.add;
};
var $plus = function $plus(dictSemiring) {
    return add(dictSemiring);
};
module.exports = {
    LT: LT,
    GT: GT,
    EQ: EQ,
    Show: Show,
    BooleanAlgebra: BooleanAlgebra,
    BoundedOrd: BoundedOrd,
    Bounded: Bounded,
    Ord: Ord,
    Eq: Eq,
    DivisionRing: DivisionRing,
    Num: Num,
    Ring: Ring,
    ModuloSemiring: ModuloSemiring,
    Semiring: Semiring,
    Semigroup: Semigroup,
    Monad: Monad,
    Bind: Bind,
    Applicative: Applicative,
    Apply: Apply,
    Functor: Functor,
    Category: Category,
    Semigroupoid: Semigroupoid,
    show: show,
    "||": $bar$bar,
    "&&": $amp$amp,
    not: not,
    disj: disj,
    conj: conj,
    bottom: bottom,
    top: top,
    unsafeCompare: unsafeCompare,
    ">=": $greater$eq,
    "<=": $less$eq,
    ">": $greater,
    "<": $less,
    compare: compare,
    "/=": $div$eq,
    "==": $eq$eq,
    eq: eq,
    "-": $minus,
    negate: negate,
    sub: sub,
    "/": $div,
    mod: mod,
    div: div,
    "*": $times,
    "+": $plus,
    one: one,
    mul: mul,
    zero: zero,
    add: add,
    "++": $plus$plus,
    "<>": $less$greater,
    append: append,
    ap: ap,
    liftM1: liftM1,
    "return": $$return,
    ">>=": $greater$greater$eq,
    bind: bind,
    liftA1: liftA1,
    pure: pure,
    "<*>": $less$times$greater,
    apply: apply,
    "void": $$void,
    "<#>": $less$hash$greater,
    "<$>": $less$dollar$greater,
    map: map,
    id: id,
    ">>>": $greater$greater$greater,
    "<<<": $less$less$less,
    compose: compose,
    otherwise: otherwise,
    asTypeOf: asTypeOf,
    "const": $$const,
    flip: flip,
    "#": $hash,
    "$": $dollar,
    unit: unit,
    semigroupoidFn: semigroupoidFn,
    categoryFn: categoryFn,
    functorFn: functorFn,
    functorArray: functorArray,
    applyFn: applyFn,
    applyArray: applyArray,
    applicativeFn: applicativeFn,
    applicativeArray: applicativeArray,
    bindFn: bindFn,
    bindArray: bindArray,
    monadFn: monadFn,
    monadArray: monadArray,
    semigroupString: semigroupString,
    semigroupUnit: semigroupUnit,
    semigroupFn: semigroupFn,
    semigroupOrdering: semigroupOrdering,
    semigroupArray: semigroupArray,
    semiringInt: semiringInt,
    semiringNumber: semiringNumber,
    semiringUnit: semiringUnit,
    ringInt: ringInt,
    ringNumber: ringNumber,
    ringUnit: ringUnit,
    moduloSemiringInt: moduloSemiringInt,
    moduloSemiringNumber: moduloSemiringNumber,
    moduloSemiringUnit: moduloSemiringUnit,
    divisionRingNumber: divisionRingNumber,
    divisionRingUnit: divisionRingUnit,
    numNumber: numNumber,
    numUnit: numUnit,
    eqBoolean: eqBoolean,
    eqInt: eqInt,
    eqNumber: eqNumber,
    eqChar: eqChar,
    eqString: eqString,
    eqUnit: eqUnit,
    eqArray: eqArray,
    eqOrdering: eqOrdering,
    ordBoolean: ordBoolean,
    ordInt: ordInt,
    ordNumber: ordNumber,
    ordString: ordString,
    ordChar: ordChar,
    ordUnit: ordUnit,
    ordArray: ordArray,
    ordOrdering: ordOrdering,
    boundedBoolean: boundedBoolean,
    boundedUnit: boundedUnit,
    boundedOrdering: boundedOrdering,
    boundedInt: boundedInt,
    boundedChar: boundedChar,
    boundedFn: boundedFn,
    boundedOrdBoolean: boundedOrdBoolean,
    boundedOrdUnit: boundedOrdUnit,
    boundedOrdOrdering: boundedOrdOrdering,
    boundedOrdInt: boundedOrdInt,
    boundedOrdChar: boundedOrdChar,
    booleanAlgebraBoolean: booleanAlgebraBoolean,
    booleanAlgebraUnit: booleanAlgebraUnit,
    booleanAlgebraFn: booleanAlgebraFn,
    showBoolean: showBoolean,
    showInt: showInt,
    showNumber: showNumber,
    showChar: showChar,
    showString: showString,
    showUnit: showUnit,
    showArray: showArray,
    showOrdering: showOrdering
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/foreign.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.App/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Array = require("Data.Array");
var Data_List = require("Data.List");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var DOM = require("DOM");
var Prelude = require("Prelude");
var Pux_DOM = require("Pux.DOM");
var Pux_React = require("Pux.React");
var Pux_React_Types = require("Pux.React.Types");
var Signal = require("Signal");
var Signal_Channel = require("Signal.Channel");
var renderHandler = function renderHandler(ctx) {
    return function (mkhandler) {
        return mkhandler(ctx);
    };
};
var renderNode = function renderNode(ctx) {
    return function (v) {
        if (v instanceof Pux_DOM.Node && v.value1 instanceof Data_Maybe.Just) {
            return Data_Array[":"](Pux_React.makeReactElementFF(v.value0)(Prelude["<>"](Prelude.semigroupArray)(v.value2)(Prelude.map(Prelude.functorArray)(renderHandler(ctx))(v.value3)))(renderNode(ctx)(v.value1.value0)))(renderNode(ctx)(v.value4));
        };
        if (v instanceof Pux_DOM.Node && v.value1 instanceof Data_Maybe.Nothing) {
            return Data_Array[":"](Pux_React.makeReactElementFF(v.value0)(Prelude["<>"](Prelude.semigroupArray)(v.value2)(Prelude.map(Prelude.functorArray)(renderHandler(ctx))(v.value3)))([]))(renderNode(ctx)(v.value4));
        };
        if (v instanceof Pux_DOM.Content) {
            return Data_Array[":"](Pux_React.makeReactTextFF(v.value0))(renderNode(ctx)(v.value1));
        };
        if (v instanceof Pux_DOM.Return) {
            return [];
        };
        throw new Error("Failed pattern match: " + [ctx.constructor.name, v.constructor.name]);
    };
};
var renderToReact = function renderToReact(ctx) {
    return function (vdom) {
        var emptydiv = Pux_React.makeReactElementFF("div")([])([]);
        return Data_Maybe.fromMaybe(emptydiv)(Data_Array.head(renderNode(ctx)(vdom)));
    };
};
var app = function app(config) {
    return function __do() {
        var v = Signal_Channel.channel(Data_List.Nil.value)();
        var render = function render(ctx) {
            return function (state) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(renderToReact(ctx)(config.view(state.state)));
            };
        };
        var noEffects = function noEffects(state) {
            return {
                state: state,
                effects: []
            };
        };
        var foldState = function foldState(effState) {
            return function (action) {
                return config.update(action)(effState.state)(v);
            };
        };
        var foldActions = function foldActions(actions) {
            return function (effState) {
                return Data_Foldable.foldl(Data_List.foldableList)(foldState)(noEffects(effState.state))(actions);
            };
        };
        var actionSignal = Signal_Channel.subscribe(v);
        var input = Data_Maybe_Unsafe.fromJust(Signal.mergeMany(Data_List.functorList)(Data_List.foldableList)(Data_List.reverse(Data_List[":"](actionSignal)(Prelude.map(Data_List.functorList)(Prelude.map(Signal.functorSignal)(Data_List.singleton))(Data_List.fromFoldable(Data_Foldable.foldableArray)(config.inputs))))));
        var effStateSignal = Signal.foldp(foldActions)(noEffects(config.state))(input);
        var componentWillMount = function componentWillMount(ctx) {
            var runEffects = function runEffects(effState) {
                return function __do() {
                    Pux_React.writeStateFF(ctx)({
                        input: input,
                        state: effState.state
                    })();
                    return Data_Foldable.sequence_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(effState.effects)();
                };
            };
            var renderSignal = Signal.flippedMap(Signal.functorSignal)(effStateSignal)(runEffects);
            return Signal.runSignal(renderSignal);
        };
        var component = Pux_React.makeReactComponentFF(render)(componentWillMount);
        return component;
    };
};
module.exports = {
    app: app
};

},{"Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Data.Array":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Array/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.List":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.List/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js","Pux.React":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/index.js","Pux.React.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js","Signal":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js","Signal.Channel":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM.HTML.Attributes/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Data_List = require("Data.List");
var DOM = require("DOM");
var Prelude = require("Prelude");
var Pux_DOM = require("Pux.DOM");
var Pux_React = require("Pux.React");
var Pux_React_Types = require("Pux.React.Types");
var Signal_Channel = require("Signal.Channel");
var wmode = Pux_React.makeAttr("wmode");
var width = Pux_React.makeAttr("width");
var value = Pux_React.makeAttr("value");
var useMap = Pux_React.makeAttr("useMap");
var type_ = Pux_React.makeAttr("type");
var title = Pux_React.makeAttr("title");
var target = Pux_React.makeAttr("target");
var tabIndex = Pux_React.makeAttr("tabIndex");
var style = Pux_React.makeAttrWithObj("style");
var stopPropagation = Pux_DOM.Handler.create(Data_List.Nil.value)(Data_List.singleton(Pux_React.stopPropagationFF));
var step = Pux_React.makeAttr("step");
var start = Pux_React.makeAttr("start");
var srcSet = Pux_React.makeAttr("srcSet");
var srcDoc = Pux_React.makeAttr("srcDoc");
var src = Pux_React.makeAttr("src");
var spellCheck = Pux_React.makeAttr("spellCheck");
var span_ = Pux_React.makeAttr("span");
var sizes = Pux_React.makeAttr("sizes");
var size = Pux_React.makeAttr("size");
var shape = Pux_React.makeAttr("shape");
var send = function send(a) {
    return new Pux_DOM.Handler(Data_List.singleton(a), Data_List.Nil.value);
};
var selected = Pux_React.makeAttr("selected");
var seamless = Pux_React.makeAttr("seamless");
var scrolling = Pux_React.makeAttr("scrolling");
var scope = Pux_React.makeAttr("scope");
var sandbox = Pux_React.makeAttr("sandbox");
var rows = Pux_React.makeAttr("rows");
var rowSpan = Pux_React.makeAttr("rowSpan");
var role = Pux_React.makeAttr("role");
var required = Pux_React.makeAttr("required");
var rel = Pux_React.makeAttr("rel");
var readOnly = Pux_React.makeAttr("readOnly");
var radioGroup = Pux_React.makeAttr("radioGroup");
var preventDefault = Pux_DOM.Handler.create(Data_List.Nil.value)(Data_List.singleton(Pux_React.preventDefaultFF));
var preload = Pux_React.makeAttr("preload");
var poster = Pux_React.makeAttr("poster");
var placeholder = Pux_React.makeAttr("placeholder");
var pattern = Pux_React.makeAttr("pattern");
var open = Pux_React.makeAttr("open");
var onWheel = function onWheel(v) {
    return Pux_React.makeHandler("onWheel")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onTouchStart = function onTouchStart(v) {
    return Pux_React.makeHandler("onTouchStart")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onTouchMove = function onTouchMove(v) {
    return Pux_React.makeHandler("onTouchMove")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onTouchEnd = function onTouchEnd(v) {
    return Pux_React.makeHandler("onTouchEnd")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onTouchCancel = function onTouchCancel(v) {
    return Pux_React.makeHandler("onTouchCancel")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onSubmit = function onSubmit(v) {
    return Pux_React.makeHandler("onSubmit")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onScroll = function onScroll(v) {
    return Pux_React.makeHandler("onScroll")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onPaste = function onPaste(v) {
    return Pux_React.makeHandler("onPaste")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onMouseUp = function onMouseUp(v) {
    return Pux_React.makeHandler("onMouseUp")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseOver = function onMouseOver(v) {
    return Pux_React.makeHandler("onMouseOver")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseOut = function onMouseOut(v) {
    return Pux_React.makeHandler("onMouseOut")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseMove = function onMouseMove(v) {
    return Pux_React.makeHandler("onMouseMove")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseLeave = function onMouseLeave(v) {
    return Pux_React.makeHandler("onMouseLeave")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseEnter = function onMouseEnter(v) {
    return Pux_React.makeHandler("onMouseEnter")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onMouseDown = function onMouseDown(v) {
    return Pux_React.makeHandler("onMouseDown")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onKeyUp = function onKeyUp(v) {
    return Pux_React.makeHandler("onKeyUp")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onKeyPress = function onKeyPress(v) {
    return Pux_React.makeHandler("onKeyPress")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onKeyDown = function onKeyDown(v) {
    return Pux_React.makeHandler("onKeyDown")(v.value1)(function (ev) {
        return Prelude.map(Data_List.functorList)(function (a) {
            return a(ev);
        })(v.value0);
    });
};
var onInput = function onInput(v) {
    return Pux_React.makeHandler("onInput")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onFocus = function onFocus(v) {
    return Pux_React.makeHandler("onFocus")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDrop = function onDrop(v) {
    return Pux_React.makeHandler("onDrop")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragStart = function onDragStart(v) {
    return Pux_React.makeHandler("onDragStart")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragOver = function onDragOver(v) {
    return Pux_React.makeHandler("onDragOver")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragLeave = function onDragLeave(v) {
    return Pux_React.makeHandler("onDragLeave")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragExit = function onDragExit(v) {
    return Pux_React.makeHandler("onDragExit")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragEnter = function onDragEnter(v) {
    return Pux_React.makeHandler("onDragEnter")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDragEnd = function onDragEnd(v) {
    return Pux_React.makeHandler("onDragEnd")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDrag = function onDrag(v) {
    return Pux_React.makeHandler("onDrag")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onDoubleClick = function onDoubleClick(v) {
    return Pux_React.makeHandler("onDoubleClick")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onCut = function onCut(v) {
    return Pux_React.makeHandler("onCut")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onCopy = function onCopy(v) {
    return Pux_React.makeHandler("onCopy")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onClick = function onClick(v) {
    return Pux_React.makeHandler("onClick")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onChange = function onChange(v) {
    return Pux_React.makeHandler("onChange")(v.value1)(function (ev) {
        return v.value0;
    });
};
var onBlur = function onBlur(v) {
    return Pux_React.makeHandler("onBlur")(v.value1)(function (ev) {
        return v.value0;
    });
};
var noValidate = Pux_React.makeAttr("noValidate");
var name = Pux_React.makeAttr("name");
var muted = Pux_React.makeAttr("muted");
var multiple = Pux_React.makeAttr("multiple");
var min = Pux_React.makeAttr("min");
var method = Pux_React.makeAttr("method");
var mediaGroup = Pux_React.makeAttr("mediaGroup");
var media = Pux_React.makeAttr("media");
var maxLength = Pux_React.makeAttr("maxLength");
var max = Pux_React.makeAttr("max");
var marginWidth = Pux_React.makeAttr("marginWidth");
var marginHeight = Pux_React.makeAttr("marginHeight");
var manifest = Pux_React.makeAttr("manifest");
var loop = Pux_React.makeAttr("loop");
var list = Pux_React.makeAttr("list");
var lang = Pux_React.makeAttr("lang");
var label = Pux_React.makeAttr("label");
var key = Pux_React.makeAttr("key");
var id_ = Pux_React.makeAttr("id");
var icon = Pux_React.makeAttr("icon");
var httpEquiv = Pux_React.makeAttr("httpEquiv");
var htmlFor = Pux_React.makeAttr("htmlFor");
var hrefLang = Pux_React.makeAttr("hrefLang");
var href = Pux_React.makeAttr("href");
var hidden = Pux_React.makeAttr("hidden");
var height = Pux_React.makeAttr("height");
var frameBorder = Pux_React.makeAttr("frameBorder");
var formTarget = Pux_React.makeAttr("formTarget");
var formNoValidate = Pux_React.makeAttr("formNoValidate");
var formMethod = Pux_React.makeAttr("formMethod");
var formEncType = Pux_React.makeAttr("formEncType");
var formAction = Pux_React.makeAttr("formAction");
var form = Pux_React.makeAttr("form");
var encType = Pux_React.makeAttr("encType");
var draggable = Pux_React.makeAttr("draggable");
var download = Pux_React.makeAttr("download");
var disabled = Pux_React.makeAttr("disabled");
var dir = Pux_React.makeAttr("dir");
var defer = Pux_React.makeAttr("defer");
var dateTime = Pux_React.makeAttr("dateTime");
var data_ = Pux_React.makeAttrWithObj("data");
var dangerouslySetInnerHTML = Pux_React.makeAttr("dangerouslySetInnerHTML");
var crossOrigin = Pux_React.makeAttr("crossOrigin");
var coords = Pux_React.makeAttr("coords");
var controls = Pux_React.makeAttr("controls");
var contextMenu = Pux_React.makeAttr("contextMenu");
var contentEditable = Pux_React.makeAttr("contentEditable");
var content = Pux_React.makeAttr("content");
var cols = Pux_React.makeAttr("cols");
var colSpan = Pux_React.makeAttr("colSpan");
var className = Pux_React.makeAttr("className");
var classID = Pux_React.makeAttr("classID");
var checked = Pux_React.makeAttr("checked");
var charSet = Pux_React.makeAttr("charSet");
var cellSpacing = Pux_React.makeAttr("cellSpacing");
var cellPadding = Pux_React.makeAttr("cellPadding");
var autoPlay = Pux_React.makeAttr("autoPlay");
var autoFocus = Pux_React.makeAttr("autoFocus");
var autoComplete = Pux_React.makeAttr("autoComplete");
var async = Pux_React.makeAttr("async");
var aria = Pux_React.makeAttrWithObj("aria");
var alt = Pux_React.makeAttr("alt");
var allowTransparency = Pux_React.makeAttr("allowTransparency");
var allowFullScreen = Pux_React.makeAttr("allowFullScreen");
var action = Pux_React.makeAttr("action");
var accessKey = Pux_React.makeAttr("accessKey");
var acceptCharset = Pux_React.makeAttr("acceptCharset");
var accept = Pux_React.makeAttr("accept");
module.exports = {
    wmode: wmode,
    width: width,
    value: value,
    useMap: useMap,
    type_: type_,
    title: title,
    target: target,
    tabIndex: tabIndex,
    step: step,
    start: start,
    srcSet: srcSet,
    srcDoc: srcDoc,
    src: src,
    spellCheck: spellCheck,
    span_: span_,
    sizes: sizes,
    size: size,
    shape: shape,
    selected: selected,
    seamless: seamless,
    scrolling: scrolling,
    scope: scope,
    sandbox: sandbox,
    rowSpan: rowSpan,
    rows: rows,
    role: role,
    required: required,
    rel: rel,
    readOnly: readOnly,
    radioGroup: radioGroup,
    preload: preload,
    poster: poster,
    placeholder: placeholder,
    pattern: pattern,
    open: open,
    noValidate: noValidate,
    name: name,
    muted: muted,
    multiple: multiple,
    min: min,
    method: method,
    mediaGroup: mediaGroup,
    media: media,
    maxLength: maxLength,
    max: max,
    marginWidth: marginWidth,
    marginHeight: marginHeight,
    manifest: manifest,
    loop: loop,
    list: list,
    lang: lang,
    label: label,
    key: key,
    id_: id_,
    icon: icon,
    httpEquiv: httpEquiv,
    htmlFor: htmlFor,
    hrefLang: hrefLang,
    href: href,
    hidden: hidden,
    height: height,
    frameBorder: frameBorder,
    formTarget: formTarget,
    formNoValidate: formNoValidate,
    formMethod: formMethod,
    formEncType: formEncType,
    formAction: formAction,
    form: form,
    encType: encType,
    draggable: draggable,
    download: download,
    disabled: disabled,
    dir: dir,
    defer: defer,
    dateTime: dateTime,
    crossOrigin: crossOrigin,
    coords: coords,
    controls: controls,
    contextMenu: contextMenu,
    contentEditable: contentEditable,
    content: content,
    colSpan: colSpan,
    cols: cols,
    className: className,
    classID: classID,
    checked: checked,
    charSet: charSet,
    cellSpacing: cellSpacing,
    cellPadding: cellPadding,
    autoPlay: autoPlay,
    autoFocus: autoFocus,
    autoComplete: autoComplete,
    async: async,
    alt: alt,
    allowTransparency: allowTransparency,
    allowFullScreen: allowFullScreen,
    action: action,
    accessKey: accessKey,
    acceptCharset: acceptCharset,
    accept: accept,
    dangerouslySetInnerHTML: dangerouslySetInnerHTML,
    style: style,
    data_: data_,
    aria: aria,
    onWheel: onWheel,
    onScroll: onScroll,
    onTouchStart: onTouchStart,
    onTouchMove: onTouchMove,
    onTouchEnd: onTouchEnd,
    onTouchCancel: onTouchCancel,
    onMouseUp: onMouseUp,
    onMouseOver: onMouseOver,
    onMouseOut: onMouseOut,
    onMouseMove: onMouseMove,
    onMouseLeave: onMouseLeave,
    onMouseEnter: onMouseEnter,
    onMouseDown: onMouseDown,
    onDrop: onDrop,
    onDragStart: onDragStart,
    onDragOver: onDragOver,
    onDragLeave: onDragLeave,
    onDragExit: onDragExit,
    onDragEnter: onDragEnter,
    onDragEnd: onDragEnd,
    onDrag: onDrag,
    onDoubleClick: onDoubleClick,
    onClick: onClick,
    onSubmit: onSubmit,
    onInput: onInput,
    onChange: onChange,
    onBlur: onBlur,
    onFocus: onFocus,
    onKeyUp: onKeyUp,
    onKeyPress: onKeyPress,
    onKeyDown: onKeyDown,
    onPaste: onPaste,
    onCut: onCut,
    onCopy: onCopy,
    stopPropagation: stopPropagation,
    preventDefault: preventDefault,
    send: send
};

},{"DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Data.List":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.List/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js","Pux.React":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/index.js","Pux.React.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js","Signal.Channel":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM.HTML.Elements/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Pux_DOM = require("Pux.DOM");
var text = function text(str) {
    return new Pux_DOM.Content(str, new Pux_DOM.Return(Prelude.unit));
};
var parent = function parent(el) {
    return function (children) {
        return new Pux_DOM.Node(el, new Data_Maybe.Just(children), [], [], new Pux_DOM.Return(Prelude.unit));
    };
};
var picture = parent("picture");
var pre = parent("pre");
var progress = parent("progress");
var q = parent("q");
var rp = parent("rp");
var rt = parent("rt");
var ruby = parent("ruby");
var s = parent("s");
var samp = parent("samp");
var script = parent("script");
var section = parent("section");
var select = parent("select");
var small = parent("small");
var span = parent("span");
var strong = parent("strong");
var style = parent("style");
var sub = parent("sub");
var summary = parent("summary");
var sup = parent("sup");
var table = parent("table");
var tbody = parent("tbody");
var td = parent("td");
var textarea = parent("textarea");
var tfoot = parent("tfoot");
var th = parent("th");
var thead = parent("thead");
var time = parent("time");
var title = parent("title");
var tr = parent("tr");
var u = parent("u");
var ul = parent("ul");
var $$var = parent("var");
var video = parent("video");
var p = parent("p");
var output = parent("output");
var option = parent("option");
var optgroup = parent("optgroup");
var ol = parent("ol");
var object = parent("object");
var noscript = parent("noscript");
var nav = parent("nav");
var meter = parent("meter");
var menu = parent("menu");
var mark = parent("mark");
var map = parent("map");
var main = parent("main");
var li = parent("li");
var legend = parent("legend");
var leaf = function leaf(el) {
    return new Pux_DOM.Node(el, Data_Maybe.Nothing.value, [], [], new Pux_DOM.Return(Prelude.unit));
};
var link = leaf("link");
var menuitem = leaf("menuitem");
var meta = leaf("meta");
var param = leaf("param");
var source = leaf("source");
var track = leaf("track");
var wbr = leaf("body");
var label = parent("label");
var keygen = leaf("keygen");
var kbd = parent("kbd");
var ins = parent("ins");
var input = leaf("input");
var img = leaf("img");
var iframe = parent("iframe");
var i = parent("i");
var html = parent("html");
var hr = leaf("hr");
var header = parent("header");
var head = parent("head");
var h6 = parent("h6");
var h5 = parent("h5");
var h4 = parent("h4");
var h3 = parent("h3");
var h2 = parent("h2");
var h1 = parent("h1");
var form = parent("form");
var footer = parent("footer");
var figure = parent("figure");
var figcaption = parent("figcaption");
var fieldset = parent("fieldset");
var embed = leaf("embed");
var em = parent("em");
var dt = parent("dt");
var dl = parent("dl");
var div = parent("div");
var dialog = parent("dialog");
var dfn = parent("dfn");
var details = parent("details");
var del = parent("del");
var dd = parent("dd");
var datalist = parent("datalist");
var data_ = parent("data");
var colgroup = parent("colgroup");
var col = leaf("col");
var code = parent("code");
var cite = parent("cite");
var caption = parent("caption");
var canvas = parent("canvas");
var button = parent("button");
var br = leaf("br");
var body = parent("body");
var blockquote = parent("blockquote");
var big = parent("big");
var bdo = parent("bdo");
var bdi = parent("bdi");
var base = leaf("base");
var b = parent("b");
var audio = parent("audio");
var aside = parent("aside");
var article = parent("article");
var area = leaf("area");
var address = parent("address");
var abbr = parent("abbr");
var a = parent("a");
module.exports = {
    wbr: wbr,
    video: video,
    "var": $$var,
    ul: ul,
    u: u,
    track: track,
    tr: tr,
    title: title,
    time: time,
    thead: thead,
    th: th,
    tfoot: tfoot,
    textarea: textarea,
    td: td,
    tbody: tbody,
    table: table,
    sup: sup,
    summary: summary,
    sub: sub,
    style: style,
    strong: strong,
    span: span,
    source: source,
    small: small,
    select: select,
    section: section,
    script: script,
    samp: samp,
    s: s,
    ruby: ruby,
    rt: rt,
    rp: rp,
    q: q,
    progress: progress,
    pre: pre,
    picture: picture,
    param: param,
    p: p,
    output: output,
    option: option,
    optgroup: optgroup,
    ol: ol,
    object: object,
    noscript: noscript,
    nav: nav,
    meter: meter,
    meta: meta,
    menuitem: menuitem,
    menu: menu,
    mark: mark,
    map: map,
    main: main,
    link: link,
    li: li,
    legend: legend,
    label: label,
    keygen: keygen,
    kbd: kbd,
    ins: ins,
    input: input,
    img: img,
    iframe: iframe,
    i: i,
    html: html,
    hr: hr,
    header: header,
    head: head,
    h6: h6,
    h5: h5,
    h4: h4,
    h3: h3,
    h2: h2,
    h1: h1,
    form: form,
    footer: footer,
    figure: figure,
    figcaption: figcaption,
    fieldset: fieldset,
    embed: embed,
    em: em,
    dt: dt,
    dl: dl,
    div: div,
    dialog: dialog,
    dfn: dfn,
    details: details,
    del: del,
    dd: dd,
    datalist: datalist,
    data_: data_,
    colgroup: colgroup,
    col: col,
    code: code,
    cite: cite,
    caption: caption,
    canvas: canvas,
    button: button,
    br: br,
    body: body,
    blockquote: blockquote,
    big: big,
    bdo: bdo,
    bdi: bdi,
    base: base,
    b: b,
    audio: audio,
    aside: aside,
    article: article,
    area: area,
    address: address,
    abbr: abbr,
    a: a,
    text: text,
    leaf: leaf,
    parent: parent
};

},{"Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Apply = require("Control.Apply");
var Data_List = require("Data.List");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Prelude = require("Prelude");
var Pux_React_Types = require("Pux.React.Types");
var Node = function () {
    function Node(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    Node.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new Node(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return Node;
}();
var Content = function () {
    function Content(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Content.create = function (value0) {
        return function (value1) {
            return new Content(value0, value1);
        };
    };
    return Content;
}();
var Return = function () {
    function Return(value0) {
        this.value0 = value0;
    };
    Return.create = function (value0) {
        return new Return(value0);
    };
    return Return;
}();
var Handler = function () {
    function Handler(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Handler.create = function (value0) {
        return function (value1) {
            return new Handler(value0, value1);
        };
    };
    return Handler;
}();
var Attrs = function () {
    function Attrs(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Attrs.create = function (value0) {
        return function (value1) {
            return new Attrs(value0, value1);
        };
    };
    return Attrs;
}();
var Attributable = function Attributable($$with) {
    this["with"] = $$with;
};
var $$with = function $$with(dict) {
    return dict["with"];
};
var $bang = function $bang(dictAttributable) {
    return $$with(dictAttributable);
};
var semigroupAttrs = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return new Attrs(Prelude.append(Prelude.semigroupArray)(v.value0)(v1.value0), Prelude.append(Prelude.semigroupArray)(v.value1)(v1.value1));
    };
});
var monoidAttrs = new Data_Monoid.Monoid(function () {
    return semigroupAttrs;
}, new Attrs(Data_Monoid.mempty(Data_Monoid.monoidArray), Data_Monoid.mempty(Data_Monoid.monoidArray)));
var handlerSemigroup = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return new Handler(Prelude["<>"](Data_List.semigroupList)(v.value0)(v1.value0), Prelude["<>"](Data_List.semigroupList)(v.value1)(v1.value1));
    };
});
var functorVDomM = new Prelude.Functor(function (f) {
    return function (v) {
        if (v instanceof Node) {
            return new Node(v.value0, v.value1, v.value2, v.value3, Prelude.map(functorVDomM)(f)(v.value4));
        };
        if (v instanceof Content) {
            return new Content(v.value0, Prelude.map(functorVDomM)(f)(v.value1));
        };
        if (v instanceof Return) {
            return new Return(f(v.value0));
        };
        throw new Error("Failed pattern match: " + [f.constructor.name, v.constructor.name]);
    };
});
var attributableVDomM = new Attributable(function (v) {
    return function (v1) {
        if (v instanceof Node) {
            return new Node(v.value0, v.value1, Prelude["<>"](Prelude.semigroupArray)(v.value2)(v1.value0), Prelude["<>"](Prelude.semigroupArray)(v.value3)(v1.value1), v.value4);
        };
        if (v instanceof Content) {
            return new Content(v.value0, v.value1);
        };
        if (v instanceof Return) {
            return new Return(v.value0);
        };
        throw new Error("Failed pattern match at Pux.DOM line 120, column 1 - line 126, column 1: " + [v.constructor.name, v1.constructor.name]);
    };
});
var attributableVDomMF = new Attributable(function (k) {
    return function (xs) {
        return function (m) {
            return $$with(attributableVDomM)(k(m))(xs);
        };
    };
});
var monadVDomM = new Prelude.Monad(function () {
    return applicativeVDomM;
}, function () {
    return bindVDomM;
});
var bindVDomM = new Prelude.Bind(function () {
    return applyVDomM;
}, function (v) {
    return function (f) {
        if (v instanceof Node) {
            return new Node(v.value0, v.value1, v.value2, v.value3, Prelude.bind(bindVDomM)(v.value4)(f));
        };
        if (v instanceof Content) {
            return new Content(v.value0, Prelude.bind(bindVDomM)(v.value1)(f));
        };
        if (v instanceof Return) {
            return f(v.value0);
        };
        throw new Error("Failed pattern match: " + [v.constructor.name, f.constructor.name]);
    };
});
var applyVDomM = new Prelude.Apply(function () {
    return functorVDomM;
}, Prelude.ap(monadVDomM));
var applicativeVDomM = new Prelude.Applicative(function () {
    return applyVDomM;
}, Return.create);
var semigroupVDomM = new Prelude.Semigroup(function (x) {
    return function (y) {
        return Control_Apply["*>"](applyVDomM)(x)(y);
    };
});
var monoidVDom = new Data_Monoid.Monoid(function () {
    return semigroupVDomM;
}, new Return(Prelude.unit));
module.exports = {
    Node: Node,
    Content: Content,
    Return: Return,
    Handler: Handler,
    Attrs: Attrs,
    Attributable: Attributable,
    "with": $$with,
    "!": $bang,
    semigroupVDomM: semigroupVDomM,
    monoidVDom: monoidVDom,
    functorVDomM: functorVDomM,
    applyVDomM: applyVDomM,
    applicativeVDomM: applicativeVDomM,
    bindVDomM: bindVDomM,
    monadVDomM: monadVDomM,
    handlerSemigroup: handlerSemigroup,
    semigroupAttrs: semigroupAttrs,
    monoidAttrs: monoidAttrs,
    attributableVDomM: attributableVDomM,
    attributableVDomMF: attributableVDomMF
};

},{"Control.Apply":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Apply/index.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Data.List":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.List/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Data.Monoid":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Monoid/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.React.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var Prelude = require("Prelude");
module.exports = {};

},{"Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/foreign.js":[function(require,module,exports){
"use strict";

// module Pux.React

exports.getInputFF = function (ctx) {
  return function () {
    return ctx.state.input;
  };
};

exports.writeStateFF = function (ctx) {
  return function (state) {
    ctx.setState(state);
    return function () {
      return function () {};
    };
  };
};

exports.makeReactComponentFF = function (render) {
  return function (componentWillMount) {
    var Component = function Component() {};
    Component.prototype = Object.create(React.Component.prototype);
    Component.displayName = 'Pux';
    Component.prototype.componentWillMount = function () {
      componentWillMount(this)();
    };
    Component.prototype.render = function () {
      return render(this)(this.state)();
    };
    return Component;
  };
};

exports.makeAttrFF = function (key) {
  return function (value) {
    var result = {};
    result[key] = value;
    return result;
  };
};

exports.makeHandlerFF = function (key) {
  return function (f) {
    return function (input) {
      var result = {};
      result[key] = function (ev) {
        f(input)(ev)();
      };
      return result;
    };
  };
};

exports.makeAttrWithObjFF = function (key) {
  return function (value) {
    var result = {};
    var props = {};
    props[key] = result;
    for (var subprop in value) {
      if (value.hasOwnProperty(subprop)) {
        result[subprop] = value[subprop];
      }
    }
    return props;
  };
};

exports.stopPropagationFF = function (ev) {
  ev.stopPropagation();
  return function () {
    return function () {};
  };
};

exports.preventDefaultFF = function (ev) {
  ev.preventDefault();
  return function () {
    return function () {};
  };
};

function makeProps(props) {
  var result = {};
  for (var i = 0, len = props.length; i < len; i++) {
    var prop = props[i];
    for (var key in prop) {
      if (prop.hasOwnProperty(key)) {
        result[key] = prop[key];
      }
    }
  }
  return result;
};

exports.makeReactElementFF = function (tagName) {
  return function (props) {
    return function (children) {
      var args = [tagName, props.length > 0 ? makeProps(props) : null].concat(children);
      return React.createElement.apply(React, args);
    };
  };
};

exports.makeReactTextFF = function (text) {
  return text;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var Data_List = require("Data.List");
var Prelude = require("Prelude");
var Pux_React_Types = require("Pux.React.Types");
var Pux_DOM = require("Pux.DOM");
var Signal_Channel = require("Signal.Channel");
var makeHandler = function makeHandler(k) {
    return function (effects) {
        return function (actions) {
            var h = function h(ctx) {
                return function (ev) {
                    var fx = Prelude.map(Data_List.functorList)(function (fx1) {
                        return fx1(ev);
                    })(effects);
                    return function __do() {
                        var v = $foreign.getInputFF(ctx)();
                        return Signal_Channel.send(v)(actions(ev))();
                    };
                };
            };
            return new Pux_DOM.Attrs([], [$foreign.makeHandlerFF(k)(h)]);
        };
    };
};
var makeAttrWithObj = function makeAttrWithObj(k) {
    return function (v) {
        return new Pux_DOM.Attrs([$foreign.makeAttrWithObjFF(k)(v)], []);
    };
};
var makeAttr = function makeAttr(k) {
    return function (v) {
        return new Pux_DOM.Attrs([$foreign.makeAttrFF(k)(v)], []);
    };
};
module.exports = {
    makeHandler: makeHandler,
    makeAttrWithObj: makeAttrWithObj,
    makeAttr: makeAttr,
    makeReactTextFF: $foreign.makeReactTextFF,
    makeReactElementFF: $foreign.makeReactElementFF,
    stopPropagationFF: $foreign.stopPropagationFF,
    preventDefaultFF: $foreign.preventDefaultFF,
    makeHandlerFF: $foreign.makeHandlerFF,
    makeAttrWithObjFF: $foreign.makeAttrWithObjFF,
    makeAttrFF: $foreign.makeAttrFF,
    makeReactComponentFF: $foreign.makeReactComponentFF,
    writeStateFF: $foreign.writeStateFF,
    getInputFF: $foreign.getInputFF
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Data.List":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.List/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.DOM/index.js","Pux.React.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js","Signal.Channel":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.Render.DOM/foreign.js":[function(require,module,exports){
"use strict";

// module Pux.Render.DOM

exports.renderFF = function (component) {
  return function (container) {
    return function () {
      ReactDOM.render(React.createElement(component), container);
      return function () {};
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.Render.DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Nullable = require("Data.Nullable");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var DOM = require("DOM");
var DOM_HTML = require("DOM.HTML");
var DOM_HTML_Types = require("DOM.HTML.Types");
var DOM_HTML_Window = require("DOM.HTML.Window");
var DOM_Node_ParentNode = require("DOM.Node.ParentNode");
var DOM_Node_Types = require("DOM.Node.Types");
var Signal_Channel = require("Signal.Channel");
var Pux_React_Types = require("Pux.React.Types");
var findContainer = function findContainer(selector) {
    return function __do() {
        var v = DOM_HTML.window();
        var v1 = DOM_HTML_Window.document(v)();
        var v2 = DOM_Node_ParentNode.querySelector(selector)(DOM_HTML_Types.htmlDocumentToParentNode(v1))();
        return Data_Maybe_Unsafe.fromJust(Data_Nullable.toMaybe(v2));
    };
};
var renderToDOM = function renderToDOM(selector) {
    return function (app) {
        return function __do() {
            var v = findContainer(selector)();
            $foreign.renderFF(app)(v)();
            return Prelude.unit;
        };
    };
};
module.exports = {
    renderToDOM: renderToDOM
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.Render.DOM/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","DOM.HTML":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML/index.js","DOM.HTML.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Types/index.js","DOM.HTML.Window":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.HTML.Window/index.js","DOM.Node.ParentNode":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.ParentNode/index.js","DOM.Node.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM.Node.Types/index.js","Data.Maybe.Unsafe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe.Unsafe/index.js","Data.Nullable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Nullable/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Pux.React.Types":"/Users/jwoo/Code/purescript-etch-sketch/output/Pux.React.Types/index.js","Signal.Channel":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/foreign.js":[function(require,module,exports){
"use strict";

// module Signal.Channel

exports.channelP = function channelP(constant) {
  return function (v) {
    return function () {
      return constant(v);
    };
  };
};

exports.sendP = function sendP(chan, v) {
  return function (v) {
    return function () {
      chan.set(v);
    };
  };
};

exports.subscribe = function subscribe(chan) {
  return chan;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var Signal = require("Signal");
var send = $foreign.sendP;
var channel = $foreign.channelP(Signal.constant);
module.exports = {
    send: send,
    channel: channel,
    subscribe: $foreign.subscribe
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Channel/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Signal":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.DOM/foreign.js":[function(require,module,exports){
"use strict";

// module Signal.DOM

exports.keyPressedP = function keyPressedP(constant) {
  return function (keyCode) {
    return function () {
      var out = constant(false);
      window.addEventListener("keydown", function (e) {
        if (e.keyCode === keyCode) out.set(true);
      });
      window.addEventListener("keyup", function (e) {
        if (e.keyCode === keyCode) out.set(false);
      });
      return out;
    };
  };
};

exports.mouseButtonP = function mouseButtonP(constant) {
  return function (button) {
    return function () {
      var out = constant(false);
      window.addEventListener("mousedown", function (e) {
        if (e.button === button) out.set(true);
      });
      window.addEventListener("mouseup", function (e) {
        if (e.button === button) out.set(false);
      });
      return out;
    };
  };
};

exports.touchP = function touchP(constant) {
  var out = constant([]);
  function report(e) {
    var touches = [],
        i,
        l = e.touches.length;
    for (i = 0; i < l; i++) {
      touches.push(e.touches.item(i));
    }out.set(touches);
  }
  window.addEventListener("touchstart", report);
  window.addEventListener("touchend", report);
  window.addEventListener("touchmove", report);
  window.addEventListener("touchcancel", report);
  return function () {
    return out;
  };
};

exports.mousePosP = function mousePosP(constant) {
  var out = constant({ x: 0, y: 0 });
  window.addEventListener('mousemove', function (e) {
    if (e.pageX !== undefined && e.pageY !== undefined) {
      out.set({ x: e.pageX, y: e.pageY });
    } else if (e.clientX !== undefined && e.clientY !== undefined) {
      out.set({
        x: e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft,
        y: e.clientY + document.body.scrollTop + document.documentElement.scrollTop
      });
    } else {
      throw new Error('Mouse event has no coordinates I recognise!');
    }
  });
  return function () {
    return out;
  };
};

exports.animationFrameP = function animationFrameP(constant) {
  return function (now) {
    return function () {
      var requestAnimFrame, cancelAnimFrame;
      if (window.requestAnimationFrame) {
        requestAnimFrame = window.requestAnimationFrame;
        cancelAnimFrame = window.cancelAnimationFrame;
      } else if (window.mozRequestAnimationFrame) {
        requestAnimFrame = window.mozRequestAnimationFrame;
        cancelAnimFrame = window.mozCancelAnimationFrame;
      } else if (window.webkitRequestAnimationFrame) {
        requestAnimFrame = window.webkitRequestAnimationFrame;
        cancelAnimFrame = window.webkitCancelAnimationFrame;
      } else if (window.msRequestAnimationFrame) {
        requestAnimFrame = window.msRequestAnimationFrame;
        cancelAnimFrame = window.msCancelAnimationFrame;
      } else if (window.oRequestAnimationFrame) {
        requestAnimFrame = window.oRequestAnimationFrame;
        cancelAnimFrame = window.oCancelAnimationFrame;
      } else {
        requestAnimFrame = function requestAnimFrame(cb) {
          setTimeout(function () {
            cb(now());
          }, 1000 / 60);
        };
        cancelAnimFrame = window.clearTimeout;
      }
      var out = constant(now());
      requestAnimFrame(function tick(t) {
        out.set(t);requestAnimFrame(tick);
      });
      return out;
    };
  };
};

exports.windowDimensionsP = function windowDimensionsP(constant) {
  var out = constant({ w: window.innerWidth, h: innerHeight });
  window.addEventListener("resize", function () {
    out.set({ w: window.innerWidth, h: window.innerHeight });
  });
  return function () {
    return out;
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Timer = require("Control.Timer");
var DOM = require("DOM");
var Prelude = require("Prelude");
var Signal = require("Signal");
var Signal_Time = require("Signal.Time");
var windowDimensions = $foreign.windowDimensionsP(Signal.constant);
var touch = $foreign.touchP(Signal.constant);
var tap = function __do() {
    var v = touch();
    return Signal.flippedMap(Signal.functorSignal)(v)(function (t) {
        if (t.length === 0) {
            return false;
        };
        return true;
    });
};
var mousePos = $foreign.mousePosP(Signal.constant);
var mouseButton = $foreign.mouseButtonP(Signal.constant);
var keyPressed = $foreign.keyPressedP(Signal.constant);
var animationFrame = $foreign.animationFrameP(Signal.constant)(Signal_Time.now);
module.exports = {
    windowDimensions: windowDimensions,
    mousePos: mousePos,
    tap: tap,
    touch: touch,
    mouseButton: mouseButton,
    keyPressed: keyPressed,
    animationFrame: animationFrame
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.DOM/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Control.Timer":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Timer/index.js","DOM":"/Users/jwoo/Code/purescript-etch-sketch/output/DOM/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Signal":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js","Signal.Time":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Time/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Time/foreign.js":[function(require,module,exports){
(function (process){
'use strict';

// module Signal.Time

function now() {
  var perf = typeof performance !== 'undefined' ? performance : null,
      proc = typeof process !== 'undefined' ? process : null;
  return (perf && (perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow) || proc && proc.hrtime && function () {
    var t = proc.hrtime();
    return (t[0] * 1e9 + t[1]) / 1e6;
  } || Date.now).call(perf);
};

exports.now = now;

exports.everyP = function everyP(constant) {
  return function (t) {
    var out = constant(now());
    setInterval(function () {
      out.set(now());
    }, t);
    return out;
  };
};

exports.delayP = function delayP(constant) {
  return function (t) {
    return function (sig) {
      var out = constant(sig.get());
      var first = true;
      sig.subscribe(function (val) {
        if (first) {
          first = false;
        } else {
          setTimeout(function () {
            out.set(val);
          }, t);
        }
      });
      return out;
    };
  };
};

exports.sinceP = function sinceP(constant) {
  return function (t) {
    return function (sig) {
      var out = constant(false);
      var first = true;
      var timer = undefined;
      var tick = function tick() {
        out.set(false);
        timer = undefined;
      };
      sig.subscribe(function () {
        if (first) {
          first = false;
          return;
        }
        if (timer === undefined) {
          out.set(true);
          timer = setTimeout(tick, t);
        } else {
          clearTimeout(timer);
          timer = setTimeout(tick, t);
        }
      });
      return out;
    };
  };
};

}).call(this,require('_process'))
},{"_process":"/Users/jwoo/.npm/lib/node_modules/pulp/node_modules/process/browser.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Time/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Timer = require("Control.Timer");
var Prelude = require("Prelude");
var Signal = require("Signal");
var since = $foreign.sinceP(Signal.constant);
var second = 1000.0;
var millisecond = 1.0;
var every = $foreign.everyP(Signal.constant);
var delay = $foreign.delayP(Signal.constant);
module.exports = {
    second: second,
    millisecond: millisecond,
    since: since,
    delay: delay,
    every: every,
    now: $foreign.now
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal.Time/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Control.Timer":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Timer/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js","Signal":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/foreign.js":[function(require,module,exports){
"use strict";

// module Signal

exports.constant = function constant(initial) {
  var subs = [];
  var val = initial;
  var sig = {
    subscribe: function subscribe(sub) {
      subs.push(sub);
      sub(val);
    },
    get: function get() {
      return val;
    },
    set: function set(newval) {
      val = newval;
      subs.forEach(function (sub) {
        sub(newval);
      });
    }
  };
  return sig;
};

exports.mapSigP = function mapSigP(constant) {
  return function (fun) {
    return function (sig) {
      var out = constant(fun(sig.get()));
      sig.subscribe(function (val) {
        out.set(fun(val));
      });
      return out;
    };
  };
};

exports.applySigP = function applySigP(constant) {
  return function (fun) {
    return function (sig) {
      var out = constant(fun.get()(sig.get()));
      var produce = function produce() {
        out.set(fun.get()(sig.get()));
      };
      fun.subscribe(produce);
      sig.subscribe(produce);
      return out;
    };
  };
};

exports.mergeP = function mergeP(constant) {
  return function (sig1) {
    return function (sig2) {
      var out = constant(sig1.get());
      sig2.subscribe(out.set);
      sig1.subscribe(out.set);
      return out;
    };
  };
};

exports.foldpP = function foldpP(constant) {
  return function (fun) {
    return function (seed) {
      return function (sig) {
        var acc = seed;
        var out = constant(acc);
        sig.subscribe(function (val) {
          acc = fun(val)(acc);
          out.set(acc);
        });
        return out;
      };
    };
  };
};

exports.sampleOnP = function sampleOnP(constant) {
  return function (sig1) {
    return function (sig2) {
      var out = constant(sig2.get());
      sig1.subscribe(function () {
        out.set(sig2.get());
      });
      return out;
    };
  };
};

exports.dropRepeatsP = function dropRepeatsP(eq) {
  return function (constant) {
    return function (sig) {
      var val = sig.get();
      var out = constant(val);
      sig.subscribe(function (newval) {
        if (!eq["eq"](val)(newval)) {
          val = newval;
          out.set(val);
        }
      });
      return out;
    };
  };
};

exports.dropRepeatsRefP = function dropRepeatsRefP(constant) {
  return function (sig) {
    var val = sig.get();
    var out = constant(val);
    sig.subscribe(function (newval) {
      if (val !== newval) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };
};

exports.runSignal = function runSignal(sig) {
  return function () {
    sig.subscribe(function (val) {
      val();
    });
    return {};
  };
};

exports.unwrapP = function unwrapP(constant) {
  return function (sig) {
    return function () {
      var out = constant(sig.get()());
      sig.subscribe(function (val) {
        out.set(val());
      });
      return out;
    };
  };
};

exports.filterP = function keepIfP(constant) {
  return function (fn) {
    return function (seed) {
      return function (sig) {
        var out = constant(fn(sig.get()) ? sig.get() : seed);
        sig.subscribe(function (val) {
          if (fn(val)) out.set(val);
        });
        return out;
      };
    };
  };
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var $less$tilde = squigglyMap;
var $tilde = squigglyApply;
var $tilde$greater = flippedMap;
var unwrap = $foreign.unwrapP($foreign.constant);
var squigglyMap = function squigglyMap(dictFunctor) {
    return Prelude.map(dictFunctor);
};
var squigglyApply = function squigglyApply(dictApply) {
    return Prelude.apply(dictApply);
};
var sampleOn = $foreign.sampleOnP($foreign.constant);
var merge = $foreign.mergeP($foreign.constant);
var mergeMany = function mergeMany(dictFunctor) {
    return function (dictFoldable) {
        return function (sigs) {
            var mergeMaybe = function mergeMaybe(v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return v;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        return v1;
                    };
                    if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(merge(v.value0)(v1.value0));
                    };
                    throw new Error("Failed pattern match at Signal line 59, column 9 - line 60, column 9: " + [v.constructor.name, v1.constructor.name]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Prelude["<$>"](dictFunctor)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var semigroupSignal = new Prelude.Semigroup(merge);
var mapSig = $foreign.mapSigP($foreign.constant);
var functorSignal = new Prelude.Functor(mapSig);
var foldp = $foreign.foldpP($foreign.constant);
var flippedMap = function flippedMap(dictFunctor) {
    return Prelude.flip(Prelude.map(dictFunctor));
};
var filter = $foreign.filterP($foreign.constant);
var filterMap = function filterMap(f) {
    return function (def) {
        return function (sig) {
            return Prelude["<$>"](functorSignal)(Data_Maybe.fromMaybe(def))(filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Prelude["<$>"](functorSignal)(f)(sig)));
        };
    };
};
var dropRepeats$prime = $foreign.dropRepeatsRefP($foreign.constant);
var dropRepeats = function dropRepeats(dictEq) {
    return $foreign.dropRepeatsP(dictEq)($foreign.constant);
};
var applySig = $foreign.applySigP($foreign.constant);
var applySignal = new Prelude.Apply(function () {
    return functorSignal;
}, applySig);
var map2 = function map2(f) {
    return function (a) {
        return function (b) {
            return squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function map3(f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function map4(f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function map5(f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Prelude.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    map5: map5,
    map4: map4,
    map3: map3,
    map2: map2,
    flippedMap: flippedMap,
    squigglyApply: squigglyApply,
    squigglyMap: squigglyMap,
    "~": $tilde,
    "~>": $tilde$greater,
    "<~": $less$tilde,
    filterMap: filterMap,
    filter: filter,
    unwrap: unwrap,
    "dropRepeats'": dropRepeats$prime,
    dropRepeats: dropRepeats,
    sampleOn: sampleOn,
    foldp: foldp,
    mergeMany: mergeMany,
    merge: merge,
    functorSignal: functorSignal,
    applySignal: applySignal,
    applicativeSignal: applicativeSignal,
    semigroupSignal: semigroupSignal,
    runSignal: $foreign.runSignal,
    constant: $foreign.constant
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Signal/foreign.js","Control.Monad.Eff":"/Users/jwoo/Code/purescript-etch-sketch/output/Control.Monad.Eff/index.js","Data.Foldable":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Foldable/index.js","Data.Maybe":"/Users/jwoo/Code/purescript-etch-sketch/output/Data.Maybe/index.js","Prelude":"/Users/jwoo/Code/purescript-etch-sketch/output/Prelude/index.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";

var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/jwoo/Code/purescript-etch-sketch/output/Unsafe.Coerce/foreign.js"}],"/Users/jwoo/Code/purescript-etch-sketch/output/browserify.js":[function(require,module,exports){
'use strict';

require('Main').main();

},{"Main":"/Users/jwoo/Code/purescript-etch-sketch/output/Main/index.js"}]},{},["/Users/jwoo/Code/purescript-etch-sketch/output/browserify.js"]);
